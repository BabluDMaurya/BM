{"version":3,"sources":["./src/app/notification/notification.page.html","./src/app/notification/notification-routing.module.ts","./src/app/notification/notification.module.ts","./src/app/notification/notification.page.scss","./src/app/notification/notification.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,g7DAAi3D,OAAO,qCAAqC,+MAA+M,6BAA6B,iDAAiD,yBAAyB,+EAA+E,wBAAwB,ulBAAulB,OAAO,oCAAoC,gNAAgN,4BAA4B,6BAA6B,iBAAiB,0DAA0D,wBAAwB,+EAA+E,uBAAuB,smBAAsmB,OAAO,sCAAsC,gNAAgN,8BAA8B,6BAA6B,mBAAmB,wDAAwD,0BAA0B,kOAAkO,yBAAyB,68B;;;;;;;;;;;;;;;;;;;ACAlnJ;AACc;AAEA;AAEvD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;CACF,CAAC;AAMF,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;CAAG;AAAhC,6BAA6B;IAJzC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,6BAA6B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBD;AACM;AACF;AAEA;AAEiC;AAEvB;AAWvD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;CAAG;AAAzB,sBAAsB;IATlC,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,0FAA6B;SAC9B;QACD,YAAY,EAAE,CAAC,mEAAgB,CAAC;KACjC,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;ACnBnC;AAAe,2FAA4B,aAAa,EAAE,sCAAsC,aAAa,EAAE,cAAc,qBAAqB,qBAAqB,qCAAqC,EAAE,uBAAuB,uCAAuC,EAAE,kCAAkC,2BAA2B,iBAAiB,mBAAmB,EAAE,iCAAiC,4BAA4B,0BAA0B,EAAE,oCAAoC,2BAA2B,EAAE,yCAAyC,2BAA2B,iBAAiB,mBAAmB,EAAE,0BAA0B,gCAAgC,EAAE,+CAA+C,+4C;;;;;;;;;;;;;;;;;;;;ACA9qB;AACuB;AAC7B;AACG;AAO/C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAO3B,YAAoB,YAAiC,EAAS,OAAsB;QAAhE,iBAAY,GAAZ,YAAY,CAAqB;QAAS,YAAO,GAAP,OAAO,CAAe;QALpF,sBAAiB,GAAW,QAAQ,CAAC;QACrC,sBAAiB,GAAG,EAAE,CAAC;QACvB,uBAAkB,GAAG,EAAE,CAAC;QACxB,QAAG,GAAQ,qDAAM,CAAC,UAAU,CAAC;IAE2D,CAAC;IACzF,SAAS,CAAC,KAAK;QACb,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,UAAU,CAAC,GAAG,EAAE;YACd,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,gBAAgB;QACd,UAAU,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,uBAAuB,EAAE,CAAC,SAAS,CACnD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC;QACxC,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC,SAAS,CAC3C,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC;QACvC,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,SAAS,CAC3D,CAAC,IAAS,EAAE,EAAE;QAEd,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,YAAY,CAAC,wBAAwB,EAAE,CAAC,SAAS,CACpD,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,MAAM,CAAC;QACzC,CAAC,CAAC,CAAC;IACP,CAAC;IACD,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;CAEF;;YArCmC,kFAAmB;YAAkB,4DAAa;;AAPzE,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,8NAAuC;;KAExC,CAAC;2EAQkC,kFAAmB,EAAkB,4DAAa;GAPzE,gBAAgB,CA4C5B;AA5C4B","file":"notification-notification-module-es2015.js","sourcesContent":["export default \"<ion-header class=\\\"top-header ion-no-padding\\\">\\r\\n  <ion-list class=\\\"top-heading three-block\\\">\\r\\n    <ion-item slot=\\\"start\\\">\\r\\n      <ion-buttons class=\\\"ion-no-margin\\\" (click)=\\\"goBack()\\\">\\r\\n        <ion-icon ios=\\\"ios-arrow-back\\\" md=\\\"md-arrow-back\\\"></ion-icon>\\r\\n      </ion-buttons>\\r\\n    </ion-item>\\r\\n    <ion-item slot=\\\"center\\\">\\r\\n      <ion-label>Notification</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item class=\\\"icon-right-side ion-text-end\\\" slot=\\\"end\\\"></ion-item>\\r\\n  </ion-list>\\r\\n</ion-header>\\r\\n<ion-content class=\\\"main_content\\\"> \\r\\n  <ion-segment class=\\\"top-segment\\\"  [(ngModel)]=\\\"notification_tabs\\\">\\r\\n    <ion-segment-button value=\\\"people\\\" checked>People</ion-segment-button>\\r\\n    <ion-segment-button value=\\\"media\\\">Media</ion-segment-button>\\r\\n    <ion-segment-button value=\\\"program\\\">Program</ion-segment-button>\\r\\n    <ion-segment-button value=\\\"payments\\\">Payments</ion-segment-button>\\r\\n  </ion-segment> \\r\\n  <ion-refresher class=\\\"page-refresher\\\" slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n      pullingIcon=\\\"arrow-dropdown\\\"\\r\\n      pullingText=\\\"Pull to refresh\\\"\\r\\n      refreshingSpinner=\\\"circles\\\"\\r\\n      refreshingText=\\\"Refreshing...\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>  \\r\\n  <div [ngSwitch]=\\\"notification_tabs\\\">    \\r\\n    <div lines=\\\"none\\\" *ngSwitchCase=\\\"'people'\\\">\\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!peopleNotification.length > 0 && data\\\">\\r\\n          <img src=\\\"../../../assets/images/error.svg\\\" class=\\\"mb-10\\\" width=\\\"40px\\\" />\\r\\n          <p>No Data Data</p>\\r\\n      </div>\\r\\n      <ion-card *ngFor=\\\"let peoplenoti of peopleNotification\\\" class=\\\"ion-no-margin\\\">\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">              \\r\\n            <img  *ngIf = \\\"peoplenoti?.user?.bios?.profile_pic\\\" src=\\\"{{url}}{{peoplenoti?.user?.bios?.profile_pic}}\\\">\\r\\n            <img  *ngIf = \\\"!peoplenoti?.user?.bios?.profile_pic\\\" src=\\\"../../assets/images/user.jpg\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <h3 class=\\\"list-person\\\">{{peoplenoti?.user?.user_name}}</h3>\\r\\n            <span class=\\\"list-name\\\">{{peoplenoti?.description}} </span>\\r\\n          </ion-label>\\r\\n          <span class=\\\"notifi-right\\\">{{peoplenoti?.created_at}}</span>\\r\\n        </ion-item> \\r\\n      </ion-card>       \\r\\n    </div> \\r\\n    <div lines=\\\"none\\\" *ngSwitchCase=\\\"'media'\\\">\\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!mediaNotification.length > 0\\\">\\r\\n        <img src=\\\"../../../assets/images/error.svg\\\" class=\\\"mb-10\\\" width=\\\"40px\\\" />\\r\\n        <p>No Data Found</p>\\r\\n      </div>\\r\\n      <ion-card *ngFor=\\\"let medianoti of mediaNotification\\\" class=\\\"ion-no-margin\\\">\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">              \\r\\n            <img  *ngIf = \\\"medianoti?.user?.bios?.profile_pic\\\" src=\\\"{{url}}{{medianoti?.user?.bios?.profile_pic}}\\\">\\r\\n            <img  *ngIf = \\\"!medianoti?.user?.bios?.profile_pic\\\" src=\\\"../../assets/images/user.jpg\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n              <h3 class=\\\"list-person\\\">{{medianoti?.user?.user_name}} <span class=\\\"list-name\\\">{{medianoti?.type}}</span></h3>\\r\\n              <span class=\\\"list-name\\\">{{medianoti?.description}} </span>\\r\\n          </ion-label>\\r\\n          <span class=\\\"notifi-right\\\">{{medianoti?.created_at}}</span>\\r\\n        </ion-item>\\r\\n      </ion-card>        \\r\\n    </div>\\r\\n    <div lines=\\\"none\\\" *ngSwitchCase=\\\"'program'\\\">      \\r\\n      <div class=\\\"no-data\\\" *ngIf=\\\"!programNotification.length > 0\\\">\\r\\n        <img src=\\\"../../../assets/images/error.svg\\\" class=\\\"mb-10\\\" width=\\\"40px\\\" />\\r\\n        <p>No Data Found</p>\\r\\n      </div>\\r\\n      <ion-card *ngFor=\\\"let programnoti of programNotification\\\" class=\\\"ion-no-margin\\\">\\r\\n        <ion-item lines=\\\"none\\\">\\r\\n          <ion-avatar slot=\\\"start\\\">              \\r\\n            <img  *ngIf = \\\"programnoti?.user?.bios?.profile_pic\\\" src=\\\"{{url}}{{programnoti?.user?.bios?.profile_pic}}\\\">\\r\\n            <img  *ngIf = \\\"!programnoti?.user?.bios?.profile_pic\\\" src=\\\"../../assets/images/user.jpg\\\">\\r\\n          </ion-avatar>\\r\\n          <ion-label>\\r\\n            <h3 class=\\\"list-person\\\">{{programnoti?.user?.user_name}} <span class=\\\"list-name\\\">{{programnoti?.type}}</span></h3>\\r\\n            <span class=\\\"list-name\\\">{{programnoti?.description}} </span>\\r\\n        </ion-label>\\r\\n          <ion-label class=\\\"ion-text-end\\\" slot=\\\"end\\\">\\r\\n            <span class=\\\"list-name text-green d-block\\\" slot=\\\"end\\\">Ended</span>\\r\\n            <span class=\\\"notifi-right\\\">{{programnoti?.created_at}}</span>\\r\\n          </ion-label>\\r\\n        </ion-item>\\r\\n      </ion-card>\\r\\n    </div> \\r\\n    <div *ngSwitchCase=\\\"'payments'\\\" class=\\\"no-data\\\">\\r\\n      <img src=\\\"../../../assets/images/error.svg\\\" class=\\\"mb-10\\\" width=\\\"40px\\\" />\\r\\n      <p>You don't have any notifications right now.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ion-list lines=\\\"none\\\" *ngIf=\\\"!data\\\">  \\r\\n    <ion-card *ngFor=\\\"let skeleton of [].constructor(20)\\\" class=\\\"ion-no-margin\\\">\\r\\n      <ion-item lines=\\\"none\\\">\\r\\n        <ion-avatar slot=\\\"start\\\">\\r\\n          <ion-skeleton-text></ion-skeleton-text>\\r\\n        </ion-avatar>\\r\\n        <ion-label>\\r\\n          <h3 class=\\\"list-person\\\"><ion-skeleton-text animated style=\\\"width: 80%\\\"></ion-skeleton-text></h3>\\r\\n          <span class=\\\"list-name\\\"><ion-skeleton-text animated style=\\\"width: 60%\\\"></ion-skeleton-text></span>\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n    </ion-card>    \\r\\n  </ion-list>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { NotificationPage } from './notification.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class NotificationPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationPageRoutingModule } from './notification-routing.module';\r\n\r\nimport { NotificationPage } from './notification.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    NotificationPageRoutingModule\r\n  ],\r\n  declarations: [NotificationPage]\r\n})\r\nexport class NotificationPageModule {}\r\n","export default \".ios.item-card ion-avatar {\\n  top: 8px; }\\n\\n.ios.item-card span.notifi-right {\\n  top: 8px; }\\n\\nion-card {\\n  border-radius: 0;\\n  box-shadow: none;\\n  border-bottom: 4px solid #f7f7f7; }\\n\\nion-card ion-item {\\n    border-bottom: 1px solid #f7f7f7; }\\n\\nion-card ion-item ion-avatar {\\n      position: absolute;\\n      top: 0px;\\n      left: 16px; }\\n\\nion-card ion-item ion-label {\\n      white-space: normal;\\n      margin-left: 55px; }\\n\\nion-card ion-item ion-label h3 {\\n        margin-bottom: 0; }\\n\\nion-card ion-item span.notifi-right {\\n      position: absolute;\\n      top: 8px;\\n      right: 8px; }\\n\\nion-content .no-data {\\n  height: calc(100vh - 100px); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbm90aWZpY2F0aW9uL0M6XFx4YW1wcFxcaHRkb2NzXFxpbnRvYWN0aXZlXFxCTS9zcmNcXGFwcFxcbm90aWZpY2F0aW9uXFxub3RpZmljYXRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQTBCLFFBQU8sRUFBQTs7QUFDakM7RUFBaUMsUUFBUSxFQUFBOztBQUV6QztFQUFTLGdCQUFnQjtFQUFDLGdCQUFnQjtFQUFDLGdDQUFnQyxFQUFBOztBQUEzRTtJQUNhLGdDQUFnQyxFQUFBOztBQUQ3QztNQUVtQixrQkFBa0I7TUFBQyxRQUFRO01BQUMsVUFBVSxFQUFBOztBQUZ6RDtNQUdrQixtQkFBbUI7TUFBQyxpQkFBaUIsRUFBQTs7QUFIdkQ7UUFJZSxnQkFBZ0IsRUFBQTs7QUFKL0I7TUFNMEIsa0JBQWtCO01BQUMsUUFBUTtNQUFDLFVBQVUsRUFBQTs7QUFHaEU7RUFDYSwyQkFBMkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmlvcy5pdGVtLWNhcmQgaW9uLWF2YXRhcnt0b3A6OHB4fVxyXG4uaW9zLml0ZW0tY2FyZCBzcGFuLm5vdGlmaS1yaWdodHt0b3A6IDhweH1cclxuXHJcbmlvbi1jYXJke2JvcmRlci1yYWRpdXM6IDA7Ym94LXNoYWRvdzogbm9uZTtib3JkZXItYm90dG9tOiA0cHggc29saWQgI2Y3ZjdmNztcclxuICAgIGlvbi1pdGVte2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjdmN2Y3O1xyXG4gICAgICAgIGlvbi1hdmF0YXJ7cG9zaXRpb246IGFic29sdXRlO3RvcDogMHB4O2xlZnQ6IDE2cHg7fVxyXG4gICAgICAgIGlvbi1sYWJlbHt3aGl0ZS1zcGFjZTogbm9ybWFsO21hcmdpbi1sZWZ0OiA1NXB4O1xyXG4gICAgICAgICAgICBoM3ttYXJnaW4tYm90dG9tOiAwO31cclxuICAgICAgICB9XHJcbiAgICAgICAgc3Bhbi5ub3RpZmktcmlnaHR7cG9zaXRpb246IGFic29sdXRlO3RvcDogOHB4O3JpZ2h0OiA4cHg7fVxyXG4gICAgfVxyXG59XHJcbmlvbi1jb250ZW50e1xyXG4gICAgLm5vLWRhdGF7aGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTAwcHgpO31cclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationService } from './../services/notification.service';\r\nimport { Config } from \"./../config/config\";\r\nimport { NavController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.page.html',\r\n  styleUrls: ['./notification.page.scss', './../app.component.scss'],\r\n})\r\nexport class NotificationPage implements OnInit {\r\n  data: any;\r\n  notification_tabs: string = \"people\";\r\n  mediaNotification = [];\r\n  peopleNotification = [];\r\n  url: any = Config.profilePic;\r\n  programNotification:any\r\n  constructor(private notification: NotificationService, public navCtrl: NavController) { }\r\n  doRefresh(event) {\r\n    this.ngOnInit();\r\n    this.ionViewWillEnter();\r\n    setTimeout(() => {\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n  ionViewWillEnter() {\r\n    setTimeout(() => {\r\n      this.data = {};\r\n    }, 2000);\r\n  }\r\n  ngOnInit() {\r\n    this.notification.getNotificationOfPeople().subscribe(\r\n      (data: any) => {\r\n        this.peopleNotification = data.status;\r\n      });\r\n    this.notification.getNotification().subscribe(\r\n      (data: any) => {\r\n        this.mediaNotification = data.status;\r\n      });\r\n\r\n    this.notification.setNotification({ 'is_read': 1 }).subscribe(\r\n      (data: any) => {\r\n\r\n      });\r\n\r\n    this.notification.getNotificationOfProgram().subscribe(\r\n      (data: any) => {\r\n        this.programNotification = data.status;\r\n      });\r\n  }\r\n  goBack() {\r\n    this.navCtrl.back();\r\n  }\r\n\r\n}"],"sourceRoot":"webpack:///"}