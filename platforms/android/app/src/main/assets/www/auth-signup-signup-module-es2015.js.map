{"version":3,"sources":["./src/app/auth/signup/signup.page.html","./src/app/auth/signup/signup-routing.module.ts","./src/app/auth/signup/signup.module.ts","./src/app/auth/signup/signup.page.scss","./src/app/auth/signup/signup.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,isBAAkoB,+CAA+C,yWAAyW,sBAAsB,qDAAqD,YAAY,uKAAuK,YAAY,kIAAkI,UAAU,2PAA2P,4CAA4C,uUAAuU,sBAAsB,6FAA6F,YAAY,qJAAqJ,+CAA+C,2jBAA2jB,sBAAsB,o+BAAo+B,sBAAsB,wrCAAwrC,sBAAsB,6JAA6J,YAAY,4rBAA4rB,sBAAsB,mEAAmE,cAAc,oTAAoT,uhBAAuhB,sBAAsB,krB;;;;;;;;;;;;;;;;;;;ACA74N;AACc;AAEZ;AAE3C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uDAAU;KACtB;CACF,CAAC;AAMF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAG;AAA1B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBK;AACM;AACkB;AAEpB;AAEqB;AAEvB;AAY3C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAG;AAAnB,gBAAgB;IAV5B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,0DAAW;YACX,8EAAuB;SACxB;QACD,YAAY,EAAE,CAAC,uDAAU,CAAC;KAC3B,CAAC;GACW,gBAAgB,CAAG;AAAH;;;;;;;;;;;;;ACpB7B;AAAe,sGAAuC,qBAAqB,GAAG,kCAAkC,wBAAwB,GAAG,yBAAyB,kBAAkB,wBAAwB,qBAAqB,GAAG,sCAAsC,uBAAuB,GAAG,kCAAkC,qBAAqB,qBAAqB,GAAG,SAAS,+BAA+B,GAAG,6CAA6C,ukD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3Z;AACT;AACwC;AAExC;AACiB;AACI;AAEa;AACf;AACW;AACK;AACM;AASlF,IAAa,UAAU,GAAvB,MAAa,UAAU;IAmBrB,YACS,aAA4B,EAC3B,MAAc,EACd,EAAe,EACf,WAAwB,EACxB,OAAgB,EAChB,kBAAsC,EACtC,WAAwB,EACxB,gBAAkC;QAPnC,kBAAa,GAAb,aAAa,CAAe;QAC3B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAS;QAChB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,gBAAW,GAAX,WAAW,CAAa;QACxB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAvB5C,SAAI,GAAY,IAAI,CAAC;QACrB,aAAQ,GAAW,EAAE,CAAC;QAGtB,uBAAkB,GAAY,KAAK,CAAC;QACpC,uBAAkB,GAAY,KAAK,CAAC;QAIpC,oBAAe,GAAY,KAAK,CAAC;QAEjC,cAAS,GAAY,KAAK,CAAC;QA6F3B,2BAAqB,GAAG;YACtB,KAAK,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,+IAA+I,EAAE;aAC9K;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;gBAC9E,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,8FAA8F,EAAE;aAE7H;YACD,QAAQ,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE;gBACrD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,6CAA6C,EAAE;gBAC7E,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,iDAAiD,EAAE;gBACjF,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,4GAA4G,EAAE;gBAC1I,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,sCAAsC,EAAE;aAC3E;YACD,GAAG,EAAE;gBACH,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,aAAa,EAAE;aAC7C;YACD,GAAG,EAAE;gBACH,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,kBAAkB,EAAE;aAClD;YACD,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACzD;YACD,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAE;gBACjE,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,iCAAiC,EAAE,CAAC;SACtE,CAAC;QA5GA,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG;YACpB,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;YACb,QAAQ,EAAE,EAAE;YACZ,SAAS,EAAE,EAAE;SACd;IACH,CAAC;IAED,QAAQ;QACN,+BAA+B;QAC/B,oBAAoB;QACpB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACzC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,oBAAoB;QACtB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,IAAI,CACrG,MAAM,CAAC,EAAE;YAEP,IAAI,MAAM,CAAC,aAAa,EAAE;gBAExB,kDAAkD;gBAClD,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBAEL,6CAA6C;gBAC7C,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC,EACD,GAAG,CAAC,EAAE;QACN,CAAC,CACF,CAAC;IACJ,CAAC;IAED,sBAAsB;IACtB,UAAU;QACR,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC/C,kCAAkC;gBAClC,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;gBACvB,yDAAU,CAAC,OAAO,CAAC,mCAAmC,CAAC;gBACvD,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;aACzB,CAAC,CAAC;YACH,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC5C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,OAAO,CAAC,4DAA4D,CAAC;aAEjF,CAAC,CAAC;YACH,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC1C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC9C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC1C,yDAAU,CAAC,QAAQ;aACpB,CAAC,CAAC;YACH,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC7C,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,YAAY;aACxB,CAAC,CAAC;YACH,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;gBAC/C,8BAA8B;gBAC9B,yDAAU,CAAC,QAAQ;gBACnB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;gBACxB,yDAAU,CAAC,OAAO,CAAC,gEAAgE,CAAC;aACrF,CAAC,CAAC;YACH,GAAG,EAAE,CAAC,EAAE,CAAC;YACT,GAAG,EAAE,CAAC,EAAE,CAAC;SAEV,CAAC,CAAC;IAEL,CAAC;IAkCD,UAAU;QACR,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,4BAA4B;IAC5B,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE9C,YAAY,CAAC,UAAU;QACrB,4CAA4C;QAC5C,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;YAC5E,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SAEtB;IAEH,CAAC;IACD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QAGrE,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACrI,OAAO;SACR;QACD,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,IAAS,EAAE,EAAE;YAExE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;gBACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAC5D,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC9C,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;oBACzE,qBAAqB;gBAEvB,CAAC,EAAE,GAAG,CAAC,EAAE;oBACP,mBAAmB;gBACrB,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;aAE3B;iBAAM;gBAEL,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;gBACnC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;aACvD;QAEH,CAAC,EAAE,GAAG,CAAC,EAAE;YACP,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,SAAS,CAAC,QAAQ;QAChB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,EAAE;YACxC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CACrE,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;oBACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,UAAU,GAAG,0BAA0B,CAAC;iBAC9C;qBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;iBACtB;YACH,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,oBAAoB;YACtB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,0BAA0B;SAC3B;IACH,CAAC;IAED,wBAAwB;IACxB,aAAa,CAAC,QAAQ;QACpB,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,KAAK,EAAE,EAAE;YAC3C,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,SAAS,CACzD,CAAC,IAAS,EAAE,EAAE;gBACZ,IAAI,IAAI,CAAC,MAAM,IAAI,KAAK,EAAE;oBACxB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;oBAC/B,IAAI,CAAC,UAAU,GAAG,wBAAwB,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC;iBAE1C;qBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;oBAC9B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;oBAChC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;iBACvB;YACH,CAAC,EACD,GAAG,CAAC,EAAE;gBACJ,oBAAoB;YACtB,CAAC,CAAC,CAAC;SACN;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;IACH,CAAC;IAED,WAAW,CAAC,QAAQ;QAClB,yBAAyB;QACzB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvD,CAAC;IAED,+EAA+E;IAC/E,kBAAkB;QAChB,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,IAAI,CACrG,MAAM,CAAC,EAAE;YACP,IAAI,MAAM,CAAC,aAAa,EAAE;gBAExB,kDAAkD;gBAClD,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBAEL,6CAA6C;gBAC7C,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC,UAAmB,EAAE,EAAE;YAC9D,IAAI,UAAU,EAAE;gBACd,mBAAmB;aACpB;iBAAM;gBACL,wCAAwC;gBACxC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,sBAAsB,CAAC;qBACjG,IAAI,CACH,GAAG,EAAE;oBACH,6BAA6B;oBAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,CAAC,EACD,KAAK,CAAC,EAAE;oBACN,yCAAyC;oBACzC,4EAA4E;gBAC9E,CAAC,CACF,CAAC;aACL;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,CAAC,CAAC,IAAI,CACtF,GAAG,EAAE;YACH,sEAAsE;YACtE,IAAI,CAAC,sBAAsB,EAAE;QAC/B,CAAC,CAEF,CAAC;IACJ,CAAC;IAED,6DAA6D;IAC7D,sBAAsB;QACpB,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE;YAClD,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;YACtD,IAAI,CAAC,cAAc,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;YACpD,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjD,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;YACjB,2CAA2C;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,cAAc;QACZ,oBAAoB;QACpB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,SAAS,CACzC,CAAC,IAAS,EAAE,EAAE;YACZ,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE5B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,oBAAoB;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU;QACR,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,mFAAc,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IACnE,CAAC;IACD,YAAY;QACV,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,yFAAgB,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;IACrE,CAAC;CACF;;YArTyB,sEAAa;YACnB,sDAAM;YACV,0DAAW;YACF,kEAAW;YACf,sDAAO;YACI,wFAAkB;YACzB,yEAAW;YACN,oFAAgB;;AA3BjC,UAAU;IANtB,+DAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,iNAAiC;;KAElC,CAAC;2EAsBwB,sEAAa;QACnB,sDAAM;QACV,0DAAW;QACF,kEAAW;QACf,sDAAO;QACI,wFAAkB;QACzB,yEAAW;QACN,oFAAgB;GA3BjC,UAAU,CAyUtB;AAzUsB","file":"auth-signup-signup-module-es2015.js","sourcesContent":["export default \"<ion-content class=\\\"sec-login\\\">\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"ion-padding ion-text-center\\\">\\r\\n      <div class=\\\"login-logo ion-text-center\\\">\\r\\n        <ion-icon ios=\\\"ios-arrow-back\\\" md=\\\"md-arrow-back\\\" [routerLink]=\\\"['/signin']\\\" class=\\\"back-icon fs-2\\\"></ion-icon>\\r\\n        <img src=\\\"../../../assets/images/logo.png\\\">\\r\\n      </div>\\r\\n      <form class=\\\"login-form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onClickSubmit()\\\">\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-input type=\\\"text\\\" color=\\\"light\\\" placeholder=\\\"Username\\\"  formControlName=\\\"username\\\"\\r\\n            [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\"  (ngModelChange)=\\\" checkUserName($event)\\\">\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.username\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('username').touched) && registerForm.get('username').hasError(validation.type)\\\">{{ validation.message }}</span>\\r\\n          <span class=\\\"error-message\\\">{{unameAvail}}</span>\\r\\n        </ng-container>\\r\\n        <ion-list class=\\\"suggestion-list\\\">\\r\\n          <ion-item *ngIf=\\\"unameAvaibilityErr\\\"><span class=\\\"error-message\\\">{{unameAvail}}</span></ion-item>\\r\\n          <ion-item *ngFor=\\\"let username of usernames\\\" (click)=\\\"setUsername($event.target.innerText)\\\">{{username}}\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-input type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"Email Address\\\" (change)=\\\"checkMail($event)\\\"\\r\\n             [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\"  >\\r\\n          </ion-input>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('email').touched ) && registerForm.get('email').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container> \\r\\n        <span class=\\\"error-message\\\">{{emailAvail}}</span>\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-input formControlName=\\\"password\\\" placeholder=\\\"Set Password\\\"[ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"  [type]=\\\"npwd ? 'password' : 'text'\\\"></ion-input>\\r\\n          <span toggle=\\\"#password-field\\\" class=\\\"change-toggle-password\\\">\\r\\n            <ion-icon color=\\\"light\\\" [name]=\\\"npwd ? 'eye-off' : 'eye'\\\" (click)=\\\"npwd=!npwd\\\"></ion-icon>\\r\\n          </span>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('password').touched) && registerForm.get('password').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-label class=\\\"text-white\\\">Age between</ion-label>\\r\\n          <ion-select class=\\\"selection\\\" formControlName=\\\"age\\\">\\r\\n            <ion-select-option value=\\\"1\\\">less than 15</ion-select-option>\\r\\n            <ion-select-option value=\\\"2\\\">15-25</ion-select-option>\\r\\n            <ion-select-option value=\\\"3\\\">25-35</ion-select-option>\\r\\n            <ion-select-option value=\\\"4\\\">35-45</ion-select-option>\\r\\n            <ion-select-option value=\\\"5\\\">45-55</ion-select-option>\\r\\n            <ion-select-option value=\\\"6\\\">more than 55</ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.age\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('age').touched) && registerForm.get('age').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-radio-group formControlName=\\\"sex\\\">\\r\\n            <ion-label>Sex</ion-label>\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-margin\\\">\\r\\n              <ion-label>Male</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"1\\\"  formControlName=\\\"sex\\\" ></ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-margin\\\">\\r\\n              <ion-label>Female</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"2\\\"  formControlName=\\\"sex\\\"> </ion-radio>\\r\\n            </ion-item>\\r\\n            <ion-item lines=\\\"none\\\" class=\\\"ion-no-margin\\\">\\r\\n              <ion-label>Other</ion-label>\\r\\n              <ion-radio slot=\\\"start\\\" value=\\\"3\\\"  formControlName=\\\"sex\\\"></ion-radio>\\r\\n            </ion-item>\\r\\n          </ion-radio-group>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.sex\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('sex').touched) && registerForm.get('sex').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-label class=\\\"text-white\\\" for=\\\"test6\\\">{{captchaDiv}} = </ion-label> \\r\\n           <ion-input type=\\\"number\\\" name=\\\"captcha\\\" id=\\\"captcha\\\" (change)=\\\" checkCaptcha($event)\\\"\\r\\n            placeholder=\\\"Enter captcha\\\" formControlName=\\\"captcha\\\" autocomplete=\\\"off\\\"></ion-input>\\r\\n          <span (click)=\\\"refreshCaptcha()\\\" class=\\\"icon-refresh\\\">\\r\\n            <ion-icon ios=\\\"ios-refresh\\\" md=\\\"md-refresh\\\"></ion-icon>\\r\\n          </span>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.captcha\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('captcha').touched) && registerForm.get('captcha').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n         <span class=\\\"error-message\\\"> {{ captchaErr }}</span>\\r\\n        </ng-container>\\r\\n        <div class=\\\"termsBox\\\">\\r\\n          <ion-checkbox formControlName='policy' checked=\\\"false\\\"></ion-checkbox> \\r\\n          <ion-text class=\\\"text-white\\\" for=\\\"test6\\\">By signing up, you agree to our <a class=\\\"text-green\\\" (click)=\\\"termsModal()\\\">Terms &amp; Conditions</a> and <a class=\\\"text-green\\\" (click)=\\\"privacyModal()\\\">Privacy Policy</a></ion-text>\\r\\n        </div>\\r\\n        <!-- <ion-item class=\\\"ion-no-padding terms mt-20 terms-list\\\" lines=\\\"none\\\">          \\r\\n          \\r\\n        </ion-item>  -->\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.policy\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submitted || registerForm.get('policy').touched) && registerForm.get('policy').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <ion-button expand=\\\"block\\\" (click)=\\\"onClickSubmit()\\\" class=\\\"green ion-text-uppercase mt-20\\\">SignUp</ion-button>\\r\\n        <div class=\\\"or-text\\\">\\r\\n          <ion-text>OR</ion-text>\\r\\n        </div>\\r\\n        <!-- <ion-button fill=\\\"outline\\\" [routerLink]=\\\"['/home']\\\" class=\\\"ion-text-uppercase btn-border btn-insta\\\">\\r\\n          <ion-icon ios=\\\"logo-instagram\\\" md=\\\"logo-instagram\\\"></ion-icon> Log In With instagram\\r\\n        </ion-button> -->\\r\\n        <p class=\\\"bottom-text\\\">Already account here <a routerLink=\\\"/signin\\\">Sign In</a></p>\\r\\n      </form>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SignupPage } from './signup.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SignupPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SignupPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SignupPageRoutingModule } from './signup-routing.module';\r\n\r\nimport { SignupPage } from './signup.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    SignupPageRoutingModule\r\n  ],\r\n  declarations: [SignupPage]\r\n})\r\nexport class SignupPageModule {}\r\n","export default \".login-form ion-radio-group ion-item {\\n  margin-bottom: 0;\\n}\\n.login-form ion-item ion-label {\\n  font-size: 0.875rem;\\n}\\n.login-form .termsBox {\\n  display: flex;\\n  margin-bottom: 10px;\\n  margin-top: 10px;\\n}\\n.login-form .termsBox ion-checkbox {\\n  margin-right: 10px;\\n}\\n.login-form .termsBox ion-text {\\n  text-align: left;\\n  line-height: 1.5;\\n}\\n.fs-2 {\\n  font-size: 2rem !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvRDpcXG5pa2hpbFxcSW50b2FjdGl2ZS9zcmNcXGFwcFxcYXV0aFxcc2lnbnVwXFxzaWdudXAucGFnZS5zY3NzIiwic3JjL2FwcC9hdXRoL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVRO0VBQVMsZ0JBQUE7QUNBakI7QURHUTtFQUFVLG1CQUFBO0FDQWxCO0FERUk7RUFBVSxhQUFBO0VBQWMsbUJBQUE7RUFBbUIsZ0JBQUE7QUNHL0M7QURGUTtFQUFhLGtCQUFBO0FDS3JCO0FESlE7RUFBUyxnQkFBQTtFQUFpQixnQkFBQTtBQ1FsQztBRExBO0VBQ0ksMEJBQUE7QUNRSiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tZm9ybXtcclxuICAgIGlvbi1yYWRpby1ncm91cHtcclxuICAgICAgICBpb24taXRlbXttYXJnaW4tYm90dG9tOiAwO31cclxuICAgIH1cclxuICAgIGlvbi1pdGVte1xyXG4gICAgICAgIGlvbi1sYWJlbHtmb250LXNpemU6IDAuODc1cmVtO31cclxuICAgIH1cclxuICAgIC50ZXJtc0JveHtkaXNwbGF5OiBmbGV4O21hcmdpbi1ib3R0b206MTBweDttYXJnaW4tdG9wOjEwcHg7XHJcbiAgICAgICAgaW9uLWNoZWNrYm94e21hcmdpbi1yaWdodDogMTBweDt9XHJcbiAgICAgICAgaW9uLXRleHR7dGV4dC1hbGlnbjogbGVmdDtsaW5lLWhlaWdodDogMS41O31cclxuICAgIH1cclxufVxyXG4uZnMtMntcclxuICAgIGZvbnQtc2l6ZTogMnJlbSAhaW1wb3J0YW50O1xyXG59IiwiLmxvZ2luLWZvcm0gaW9uLXJhZGlvLWdyb3VwIGlvbi1pdGVtIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5sb2dpbi1mb3JtIGlvbi1pdGVtIGlvbi1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07XG59XG4ubG9naW4tZm9ybSAudGVybXNCb3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmxvZ2luLWZvcm0gLnRlcm1zQm94IGlvbi1jaGVja2JveCB7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbn1cbi5sb2dpbi1mb3JtIC50ZXJtc0JveCBpb24tdGV4dCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG59XG5cbi5mcy0yIHtcbiAgZm9udC1zaXplOiAycmVtICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Storage } from '@ionic/storage';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { CommonService } from '../../services/common.service';\r\nimport { Platform, AlertController } from '@ionic/angular';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\r\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\r\nimport { LocationAccuracy } from '@ionic-native/location-accuracy/ngx';\r\nimport { TermsComponent } from './../../modalContent/terms/terms.component';\r\nimport { PrivacyComponent } from './../../modalContent/privacy/privacy.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.page.html',\r\n  styleUrls: ['./signup.page.scss', './../../app.component.scss'],\r\n})\r\n\r\nexport class SignupPage implements OnInit {\r\n  ipAddress: any;\r\n\r\n  email: string;\r\n  npwd: boolean = true;\r\n  password: string = '';\r\n  emailAvail: string;\r\n  unameAvail: string;\r\n  emailAvaibilityErr: boolean = false;\r\n  unameAvaibilityErr: boolean = false;\r\n  registerForm: FormGroup;\r\n  hide: any;\r\n  usernames: [];\r\n  captchaMatcherr: boolean = false;\r\n  captchaErr: string;\r\n  submitted: boolean = false;\r\n  captchaDiv: string;\r\n  capVal: string;\r\n  locationCoords: any;\r\n  constructor(\r\n    public commonService: CommonService,\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private storage: Storage,\r\n    private androidPermissions: AndroidPermissions,\r\n    private geolocation: Geolocation,\r\n    private locationAccuracy: LocationAccuracy,\r\n  ) {\r\n    this.createForm();\r\n    this.locationCoords = {\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      accuracy: \"\",\r\n      timestamp: \"\"\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.authService.autoLogin();\r\n    //get the captch api\r\n    this.authService.getCaptchaHtml().subscribe(\r\n      (data: any) => {\r\n        this.captchaDiv = data.value1;\r\n        this.capVal = data.result;\r\n      },\r\n      err => {\r\n        // console.log(err);\r\n      });\r\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION).then(\r\n      result => {\r\n\r\n        if (result.hasPermission) {\r\n\r\n          //If having permission show 'Turn On GPS' dialogue\r\n          this.askToTurnOnGPS();\r\n        } else {\r\n\r\n          //If not having permission ask for permission\r\n          this.requestGPSPermission();\r\n        }\r\n      },\r\n      err => {\r\n      }\r\n    );\r\n  }\r\n\r\n  // Reactiveform create\r\n  createForm() {\r\n    this.registerForm = this.fb.group({\r\n      username: new FormControl('', Validators.compose([\r\n        //UsernameValidator.validUsername,\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n        Validators.pattern('^[A-Za-z][A-Za-z0-9_./&+-]{4,25}$'),\r\n        Validators.maxLength(25),\r\n      ])),\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('[a-zA-Z0-9_.+-]+@(?:[a-zA-Z0-9-]+\\.)\\.[A-Za-z0-9._%+-]{2,}'),\r\n        //  Validators.pattern('[a-zA-Z0-9_.+-]+@(?:(?:[a-zA-Z0-9-]+\\.)?[a-zA-Z]+\\.)?(gmail|wdipl|yahoo|live|outlook|hotmail|yopmail|gmx)\\.[A-Za-z0-9._%+-]{2,}')\r\n      ])),\r\n      sex: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n      captcha: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n      age: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n      ])),\r\n      policy: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.requiredTrue\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        // PasswordValidator.areEqual,\r\n        Validators.required,\r\n        Validators.maxLength(25),\r\n        Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$'),\r\n      ])),\r\n      lat: [''],\r\n      lon: [''],\r\n\r\n    });\r\n\r\n  }\r\n\r\n  'validation_messages' = {\r\n    email: [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Enter a valid email Like: \"example@domain.com\" and allowed domains are  wdipl.com, gmail.com, yopmail.com, hotmail.com, outlook.com, live.com' }\r\n    ],\r\n    password: [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 8 characters long.' },\r\n      { type: 'pattern', message: 'Length should be 8(least one uppercase, one lowercase, one special character and one number)' }\r\n\r\n    ],\r\n    username: [\r\n      { type: 'required', message: 'Username is required' },\r\n      { type: 'minlength', message: 'Username must be at least 5 characters long' },\r\n      { type: 'maxlength', message: 'Username cannot be more than 25 characters long' },\r\n      { type: 'pattern', message: 'Please enter atleast 5 characters and first letter should be alphabet. You can use number and _ . / & + - ' },\r\n      { type: 'validUsername', message: 'Your username has already been taken' }\r\n    ],\r\n    age: [\r\n      { type: 'required', message: 'Select age.' },\r\n    ],\r\n    sex: [\r\n      { type: 'required', message: 'Gender required.' },\r\n    ],\r\n    captcha: [\r\n      { type: 'required', message: 'This field is required.' },\r\n    ],\r\n    policy: [{ type: 'required', message: 'This field is required.' },\r\n    { type: 'requiredTrue', message: 'This field needs to be checked.' }]\r\n  };\r\n\r\n\r\n  myFunction() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  // Form submit event listner\r\n  get f() { return this.registerForm.controls; }\r\n\r\n  checkCaptcha(captchaval) {\r\n    // && this.registerForm.value.captcha !== ''\r\n    if (captchaval.target.value != this.capVal && captchaval.target.value !== '') {\r\n      this.captchaMatcherr = true;\r\n      this.captchaErr = 'Invalid Captcha.';\r\n    } else {\r\n      this.captchaMatcherr = false;\r\n      this.captchaErr = '';\r\n\r\n    }\r\n\r\n  }\r\n  onClickSubmit() {\r\n    this.submitted = true;\r\n    this.registerForm.get('lat').setValue(this.locationCoords.latitude);\r\n    this.registerForm.get('lon').setValue(this.locationCoords.longitude);\r\n\r\n\r\n    if (this.registerForm.invalid || this.registerForm.value.captcha != this.capVal || this.emailAvaibilityErr || this.unameAvaibilityErr) {\r\n      return;\r\n    }\r\n    this.commonService.presentLoader();\r\n    this.authService.addUser(this.registerForm.value).subscribe((data: any) => {\r\n\r\n      if (data.message == true) {\r\n        this.storage.set('userData', this.registerForm.value.email);\r\n        this.storage.set('userToken', data.userToken);\r\n        this.commonService.dismissLoader();\r\n        this.router.navigate([\"verify\", this.registerForm.value.email]).then(nav => {\r\n          // console.log(nav); \r\n\r\n        }, err => {\r\n          // console.log(err)\r\n        });\r\n        this.registerForm.reset();\r\n\r\n      } else {\r\n\r\n        this.commonService.dismissLoader();\r\n        this.commonService.presentToast(JSON.stringify(data));\r\n      }\r\n\r\n    }, err => {\r\n      this.commonService.dismissLoader();\r\n    });\r\n  }\r\n\r\n  // change event listener\r\n  checkMail(emailval) {\r\n    if (this.registerForm.value.email !== '') {\r\n      this.authService.checkMailAvailability(emailval.target.value).subscribe(\r\n        (data: any) => {\r\n          if (data.status == false) {\r\n            this.emailAvaibilityErr = true;\r\n            this.emailAvail = 'Email id already exist!!';\r\n          } else if (data.status == true) {\r\n            this.emailAvaibilityErr = false;\r\n            this.emailAvail = '';\r\n          }\r\n        },\r\n        err => {\r\n          // console.log(err);\r\n        });\r\n    } else {\r\n      this.emailAvail = '';\r\n      // console.log('hhhgfgf');\r\n    }\r\n  }\r\n\r\n  // change event listener\r\n  checkUserName(unameval) {\r\n    if (this.registerForm.value.username !== '') {\r\n      this.authService.checkUnameAvailability(unameval).subscribe(\r\n        (data: any) => {\r\n          if (data.status == false) {\r\n            this.unameAvaibilityErr = true;\r\n            this.unameAvail = 'Username already exist';\r\n            this.usernames = data.usernameSuggetions;\r\n\r\n          } else if (data.status == true) {\r\n            this.unameAvaibilityErr = false;\r\n            this.unameAvail = '';\r\n            this.usernames = null;\r\n          }\r\n        },\r\n        err => {\r\n          // console.log(err);\r\n        });\r\n    } else {\r\n      this.unameAvail = '';\r\n    }\r\n  }\r\n\r\n  setUsername(username) {\r\n    // console.log(username);\r\n    this.registerForm.get('username').setValue(username);\r\n  }\r\n\r\n  // -----------------------  G P S   P E R M I S S I O N  ----------------------\r\n  checkGPSPermission() {\r\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION).then(\r\n      result => {\r\n        if (result.hasPermission) {\r\n\r\n          //If having permission show 'Turn On GPS' dialogue\r\n          this.askToTurnOnGPS();\r\n        } else {\r\n\r\n          //If not having permission ask for permission\r\n          this.requestGPSPermission();\r\n        }\r\n      },\r\n      err => {\r\n        alert(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  requestGPSPermission() {\r\n    this.locationAccuracy.canRequest().then((canRequest: boolean) => {\r\n      if (canRequest) {\r\n        //console.log(\"4\");\r\n      } else {\r\n        //Show 'GPS Permission Request' dialogue\r\n        this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.ACCESS_COARSE_LOCATION)\r\n          .then(\r\n            () => {\r\n              // call method to turn on GPS\r\n              this.askToTurnOnGPS();\r\n            },\r\n            error => {\r\n              //Show alert if user click on 'No Thanks'\r\n              // alert('requestPermission Error requesting location permissions ' + error)\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  askToTurnOnGPS() {\r\n    this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_HIGH_ACCURACY).then(\r\n      () => {\r\n        // When GPS Turned ON call method to get Accurate location coordinates\r\n        this.getLocationCoordinates()\r\n      },\r\n      // error => alert('Error requesting location permissions ' + JSON.stringify(error))\r\n    );\r\n  }\r\n\r\n  // Methos to get device accurate coordinates using device GPS\r\n  getLocationCoordinates() {\r\n    this.geolocation.getCurrentPosition().then((resp) => {\r\n      this.locationCoords.latitude = resp.coords.latitude;\r\n      this.locationCoords.longitude = resp.coords.longitude;\r\n      this.locationCoords.accuracy = resp.coords.accuracy;\r\n      this.locationCoords.timestamp = resp.timestamp;\r\n    }).catch((error) => {\r\n      // alert('Error getting location' + error);\r\n    });\r\n  }\r\n\r\n  // Refresh Captcha \r\n  refreshCaptcha() {\r\n    //get the captch api\r\n    this.authService.getCaptchaHtml().subscribe(\r\n      (data: any) => {\r\n        this.registerForm.controls['captcha'].setValue('');\r\n        this.captchaDiv = data.value1;\r\n        this.capVal = data.result;\r\n\r\n      },\r\n      err => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n\r\n  termsModal() {\r\n    this.commonService.presentModal(TermsComponent, 'fullModal', '');\r\n  }\r\n  privacyModal() {\r\n    this.commonService.presentModal(PrivacyComponent, 'fullModal', '');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}