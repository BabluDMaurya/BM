{"version":3,"sources":["node_modules/ng2-file-upload/fesm2015/ng2-file-upload.js","src/app/add-post/add-post.page.html","src/app/add-post/add-post-routing.module.ts","src/app/add-post/add-post.module.ts","src/app/add-post/add-post.page.scss","src/app/add-post/add-post.page.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng2FileSelect]' },] }\n];\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.decorators = [\n    { type: Directive, args: [{ selector: '[ng2FileDrop]' },] }\n];\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n//# sourceMappingURL=ng2-file-upload.js.map\n","export default \"<ion-header class=\\\"top-header ion-no-padding\\\">\\r\\n  <ion-list class=\\\"top-heading three-block\\\">\\r\\n    <ion-item slot=\\\"start\\\">\\r\\n      <ion-buttons class=\\\"ion-no-margin\\\">\\r\\n        <ion-icon ios=\\\"ios-arrow-back\\\" md=\\\"md-arrow-back\\\" (click)=\\\"goBack()\\\"></ion-icon>\\r\\n      </ion-buttons>\\r\\n    </ion-item>\\r\\n    <ion-item slot=\\\"center\\\">\\r\\n      <ion-label>Add Post</ion-label>\\r\\n    </ion-item>\\r\\n    <ion-item class=\\\"icon-right-side ion-text-end\\\" slot=\\\"end\\\">\\r\\n      <ion-label class=\\\"text-green\\\" (click)=\\\"postImg()\\\">Post</ion-label>\\r\\n      <!-- <ion-fab-button class=\\\"btn-next\\\" size=\\\"small\\\" slot=\\\"end\\\"><ion-icon ios=\\\"ios-send\\\" md=\\\"md-send\\\"></ion-icon></ion-fab-button>           -->\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-header>\\r\\n<ion-row class=\\\"ion-padding-horizontal main_content\\\">\\r\\n  <ion-col size=\\\"6\\\" class=\\\"ion-no-padding\\\">\\r\\n    <ion-card class=\\\"upload-box ion-noleft-margin\\\" (click)=\\\"openGallery()\\\">\\r\\n      <div class=\\\"upload_icon\\\">\\r\\n        <ion-icon ios=\\\"ios-image\\\" md=\\\"md-image\\\"></ion-icon>\\r\\n      </div>\\r\\n      <ion-card-title>Library</ion-card-title>\\r\\n    </ion-card>\\r\\n  </ion-col>\\r\\n  <ion-col size=\\\"6\\\" class=\\\"ion-no-padding\\\">\\r\\n    <ion-card class=\\\"upload-box ion-noright-margin\\\" (click)=\\\"takeSnap()\\\">\\r\\n\\r\\n      <div class=\\\"upload_icon\\\">\\r\\n        <ion-icon ios=\\\"ios-camera\\\" md=\\\"md-camera\\\"></ion-icon>\\r\\n      </div>\\r\\n      <ion-card-title>Camera</ion-card-title>\\r\\n\\r\\n    </ion-card>\\r\\n  </ion-col>\\r\\n  </ion-row>\\r\\n<ion-content class=\\\"main_content\\\">\\r\\n  <ion-grid class=\\\"ion-padding-horizontal\\\">\\r\\n    <ion-row class=\\\"ion-no-padding\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n\\r\\n          <ion-list>\\r\\n            <ion-item class=\\\"mb-10 ion-no-padding\\\" >\\r\\n              <ion-textarea rows=\\\"5\\\" auto-grow=\\\"true\\\" #myInput placeholder=\\\"Write something here\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"description\\\"></ion-textarea>\\r\\n            </ion-item>\\r\\n          </ion-list>\\r\\n       \\r\\n      </ion-col>\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n        <!-- <ion-slides pager=\\\"false\\\" [options]=\\\"sliderOpts\\\" class=\\\"autowidth-slider mb-10\\\" #mySlider>\\r\\n          <ion-slide *ngFor=\\\"let imgpath of gallaryImgPath; let i=index;\\\">\\r\\n            <img src=\\\"{{imgpath}}\\\"/>\\r\\n            <ion-icon ios=\\\"ios-close-circle\\\" md=\\\"md-close-circle\\\" (click)=\\\"removeImg(i)\\\"></ion-icon>\\r\\n          </ion-slide>  \\r\\n        </ion-slides>  -->\\r\\n        <ion-segment scrollable=\\\"true\\\" class=\\\"ion-no-padding scrollable-imgs\\\">\\r\\n          <ion-segment-button *ngFor=\\\"let imgpath of gallaryImgPath; let i=index;\\\">\\r\\n            <img src=\\\"{{imgpath}}\\\"/>\\r\\n            <ion-icon ios=\\\"ios-close-circle\\\" md=\\\"md-close-circle\\\" (click)=\\\"removeImg(i)\\\"></ion-icon>\\r\\n          </ion-segment-button>         \\r\\n        </ion-segment>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n<!-- <ion-footer class=\\\"sticky-footer icon-footer\\\">\\r\\n  <ion-list class=\\\"ion-no-margin\\\">\\r\\n    <ion-item>\\r\\n      <img src=\\\"../../assets/images/photo.svg\\\"  (click)=\\\"openGallery()\\\" />\\r\\n    </ion-item>\\r\\n    <ion-item>\\r\\n      <img src=\\\"../../assets/images/photo-camera.svg\\\" (click)=\\\"takeSnap()\\\" />\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n</ion-footer> -->\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddPostPage } from './add-post.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddPostPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddPostPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { AddPostPageRoutingModule } from './add-post-routing.module';\r\n\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { AddPostPage } from './add-post.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FileUploadModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    AddPostPageRoutingModule\r\n  ],\r\n  declarations: [AddPostPage]\r\n})\r\nexport class AddPostPageModule {}\r\n","export default \".swiper-slide {\\n  width: auto;\\n}\\n\\nion-textarea.form-control textarea {\\n  height: 100%;\\n  padding: 0;\\n}\\n\\n.scrollable-imgs ion-segment-button {\\n  border-radius: 8px;\\n  --padding-start: 0;\\n  --padding-end: 0;\\n  margin-right: 8px;\\n  background: whitesmoke;\\n  --border-color: transparent;\\n  display: block;\\n  height: 260px;\\n  width: 160px;\\n  max-width: 160px;\\n}\\n\\n.scrollable-imgs ion-segment-button img {\\n  width: 100%;\\n  height: 260px;\\n  -o-object-fit: cover;\\n     object-fit: cover;\\n}\\n\\n.scrollable-imgs ion-segment-button ion-icon {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  margin: 0;\\n  color: #222;\\n}\\n\\nion-footer.sticky-footer {\\n  padding: 0;\\n}\\n\\nion-footer.sticky-footer ion-list {\\n  flex-wrap: nowrap;\\n}\\n\\nion-footer.sticky-footer ion-list ion-item {\\n  width: 50%;\\n  margin: 0;\\n  text-align: center;\\n  background: #3da89e;\\n  --background: #3da89e;\\n}\\n\\nion-footer.sticky-footer ion-list ion-item img {\\n  margin: auto;\\n}\\n\\nion-footer.sticky-footer ion-list ion-item::after {\\n  content: \\\"\\\";\\n  width: 1px;\\n  height: 30px;\\n  background: #94e2db;\\n  position: absolute;\\n  top: 13px;\\n  right: 0;\\n}\\n\\nion-footer.sticky-footer ion-list ion-item:nth-child(2)::after {\\n  display: none;\\n}\\n\\nion-footer.sticky-footer ion-list ion-item:nth-child(2) {\\n  background: #3da89e;\\n  --background: #3da89e;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXBvc3QvQzpcXHhhbXBwXFxodGRvY3NcXGludG9hY3RpdmUvc3JjXFxhcHBcXGFkZC1wb3N0XFxhZGQtcG9zdC5wYWdlLnNjc3MiLCJzcmMvYXBwL2FkZC1wb3N0L2FkZC1wb3N0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFlLFdBQUE7QUNFZjs7QUREQTtFQUFtQyxZQUFBO0VBQWEsVUFBQTtBQ01oRDs7QURMQTtFQUFvQyxrQkFBQTtFQUFtQixrQkFBQTtFQUFtQixnQkFBQTtFQUFpQixpQkFBQTtFQUFrQixzQkFBQTtFQUF1QiwyQkFBQTtFQUE0QixjQUFBO0VBQWUsYUFBQTtFQUFjLFlBQUE7RUFBYSxnQkFBQTtBQ2tCMU07O0FEakJBO0VBQXdDLFdBQUE7RUFBWSxhQUFBO0VBQWMsb0JBQUE7S0FBQSxpQkFBQTtBQ3VCbEU7O0FEdEJBO0VBQTZDLGtCQUFBO0VBQW1CLFFBQUE7RUFBUyxNQUFBO0VBQU8sU0FBQTtFQUFVLFdBQUE7QUM4QjFGOztBRDdCQTtFQUF5QixVQUFBO0FDaUN6Qjs7QURoQ0M7RUFBYSxpQkFBQTtBQ21DZDs7QURsQ0U7RUFBUyxVQUFBO0VBQVcsU0FBQTtFQUFVLGtCQUFBO0VBQXVCLG1CQUFBO0VBQ3BELHFCQUFBO0FDd0NIOztBRHZDRztFQUFJLFlBQUE7QUMwQ1A7O0FEeENFO0VBQWdCLFdBQUE7RUFBWSxVQUFBO0VBQVcsWUFBQTtFQUN0QyxtQkFBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUFVLFFBQUE7QUM4Q2I7O0FEN0NFO0VBQTZCLGFBQUE7QUNnRC9COztBRC9DRTtFQUEwQixtQkFBQTtFQUN6QixxQkFBQTtBQ2tESCIsImZpbGUiOiJzcmMvYXBwL2FkZC1wb3N0L2FkZC1wb3N0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zd2lwZXItc2xpZGUge3dpZHRoOiBhdXRvO31cclxuaW9uLXRleHRhcmVhLmZvcm0tY29udHJvbCB0ZXh0YXJlYXtoZWlnaHQ6IDEwMCU7cGFkZGluZzogMDt9XHJcbi5zY3JvbGxhYmxlLWltZ3MgaW9uLXNlZ21lbnQtYnV0dG9ue2JvcmRlci1yYWRpdXM6IDhweDstLXBhZGRpbmctc3RhcnQ6IDA7LS1wYWRkaW5nLWVuZDogMDttYXJnaW4tcmlnaHQ6IDhweDtiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlOy0tYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtkaXNwbGF5OiBibG9jaztoZWlnaHQ6IDI2MHB4O3dpZHRoOiAxNjBweDttYXgtd2lkdGg6IDE2MHB4fVxyXG4uc2Nyb2xsYWJsZS1pbWdzIGlvbi1zZWdtZW50LWJ1dHRvbiBpbWd7d2lkdGg6IDEwMCU7aGVpZ2h0OiAyNjBweDtvYmplY3QtZml0OiBjb3Zlcjt9XHJcbi5zY3JvbGxhYmxlLWltZ3MgaW9uLXNlZ21lbnQtYnV0dG9uIGlvbi1pY29ue3Bvc2l0aW9uOiBhYnNvbHV0ZTtyaWdodDogMDt0b3A6IDA7bWFyZ2luOiAwO2NvbG9yOiMyMjJ9XHJcbmlvbi1mb290ZXIuc3RpY2t5LWZvb3RlcntwYWRkaW5nOiAwO1xyXG5cdGlvbi1saXN0eyAgICBmbGV4LXdyYXA6IG5vd3JhcDtcclxuXHRcdGlvbi1pdGVte3dpZHRoOiA1MCU7bWFyZ2luOiAwO3RleHQtYWxpZ246IGNlbnRlcjsgICAgYmFja2dyb3VuZDogIzNkYTg5ZTtcclxuXHRcdFx0LS1iYWNrZ3JvdW5kOiAjM2RhODllO1xyXG5cdFx0XHRpbWd7bWFyZ2luOiBhdXRvO31cclxuXHRcdH1cclxuXHRcdGlvbi1pdGVtOjphZnRlcntjb250ZW50OiAnJzt3aWR0aDogMXB4O2hlaWdodDogMzBweDtcclxuXHRcdFx0YmFja2dyb3VuZDogIzk0ZTJkYjtcclxuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdFx0XHR0b3A6IDEzcHg7cmlnaHQ6IDA7fVxyXG5cdFx0aW9uLWl0ZW06bnRoLWNoaWxkKDIpOjphZnRlcntkaXNwbGF5OiBub25lO31cclxuXHRcdGlvbi1pdGVtOm50aC1jaGlsZCgyKXsgICAgYmFja2dyb3VuZDogIzNkYTg5ZTtcclxuXHRcdFx0LS1iYWNrZ3JvdW5kOiAjM2RhODllO31cclxuXHR9XHJcbn1cclxuIiwiLnN3aXBlci1zbGlkZSB7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG5pb24tdGV4dGFyZWEuZm9ybS1jb250cm9sIHRleHRhcmVhIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uc2Nyb2xsYWJsZS1pbWdzIGlvbi1zZWdtZW50LWJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAtLXBhZGRpbmctZW5kOiAwO1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbiAgYmFja2dyb3VuZDogd2hpdGVzbW9rZTtcbiAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAyNjBweDtcbiAgd2lkdGg6IDE2MHB4O1xuICBtYXgtd2lkdGg6IDE2MHB4O1xufVxuXG4uc2Nyb2xsYWJsZS1pbWdzIGlvbi1zZWdtZW50LWJ1dHRvbiBpbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAyNjBweDtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5zY3JvbGxhYmxlLWltZ3MgaW9uLXNlZ21lbnQtYnV0dG9uIGlvbi1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAjMjIyO1xufVxuXG5pb24tZm9vdGVyLnN0aWNreS1mb290ZXIge1xuICBwYWRkaW5nOiAwO1xufVxuaW9uLWZvb3Rlci5zdGlja3ktZm9vdGVyIGlvbi1saXN0IHtcbiAgZmxleC13cmFwOiBub3dyYXA7XG59XG5pb24tZm9vdGVyLnN0aWNreS1mb290ZXIgaW9uLWxpc3QgaW9uLWl0ZW0ge1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZDogIzNkYTg5ZTtcbiAgLS1iYWNrZ3JvdW5kOiAjM2RhODllO1xufVxuaW9uLWZvb3Rlci5zdGlja3ktZm9vdGVyIGlvbi1saXN0IGlvbi1pdGVtIGltZyB7XG4gIG1hcmdpbjogYXV0bztcbn1cbmlvbi1mb290ZXIuc3RpY2t5LWZvb3RlciBpb24tbGlzdCBpb24taXRlbTo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB3aWR0aDogMXB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIGJhY2tncm91bmQ6ICM5NGUyZGI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAxM3B4O1xuICByaWdodDogMDtcbn1cbmlvbi1mb290ZXIuc3RpY2t5LWZvb3RlciBpb24tbGlzdCBpb24taXRlbTpudGgtY2hpbGQoMik6OmFmdGVyIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbmlvbi1mb290ZXIuc3RpY2t5LWZvb3RlciBpb24tbGlzdCBpb24taXRlbTpudGgtY2hpbGQoMikge1xuICBiYWNrZ3JvdW5kOiAjM2RhODllO1xuICAtLWJhY2tncm91bmQ6ICMzZGE4OWU7XG59Il19 */\"","import { Component, OnInit, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\r\nimport { ImagePicker, ImagePickerOptions } from '@ionic-native/image-picker/ngx';\r\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\r\nimport { NutritionService } from './../services/nutrition.service';\r\nimport { CommonService } from './../services/common.service';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FileUploader, FileLikeObject } from 'ng2-file-upload';\r\nimport { FormControl, FormBuilder, FormArray } from '@angular/forms';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-add-post',\r\n  templateUrl: './add-post.page.html',\r\n  styleUrls: ['./../app.component.scss', './add-post.page.scss'],\r\n})\r\nexport class AddPostPage implements OnInit {\r\n  @ViewChild('myInput', { static: true }) content: ElementRef;\r\n  public uploader: FileUploader = new FileUploader({\r\n    url: 'https://ionicinto.wdipl.com/api/auth/uploadPost',\r\n    autoUpload: true,\r\n    method: 'post',\r\n    headers: [{ name: 'Access-Control-Allow-Credentials', value: 'true' },\r\n    { name: 'Access-Control-Allow-Origin', value: '*' }]\r\n\r\n  });\r\n  addPostForm: any;\r\n  sliderOpts = {\r\n    zoom: false,\r\n    slidesPerView: 'auto',\r\n    centeredSlides: false,\r\n    spaceBetween: 15,\r\n  }\r\n  postSubscrib:any;\r\n  private win: any = window;\r\n  gallaryImgPath: any = [];\r\n  description: string;\r\n  constructor(private camera: Camera,\r\n    private imagePicker: ImagePicker,\r\n    private transfer: FileTransfer,\r\n    private nutritionService: NutritionService,\r\n    private commonService: CommonService,\r\n    public sanitizer: DomSanitizer,\r\n    public formBuilder: FormBuilder,\r\n    private navCtrl: NavController,\r\n    private router: Router,\r\n  ) {\r\n    this.createForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  \r\n  public onFileSelected(event: EventEmitter<File[]>) {\r\n    const file: File = event[0];\r\n\r\n  }\r\n\r\n  pickImage(sourceType) {\r\n    const options: CameraOptions = {\r\n      quality: 100,\r\n      sourceType: sourceType,\r\n      destinationType: this.camera.DestinationType.DATA_URL,\r\n      encodingType: this.camera.EncodingType.JPEG,\r\n      mediaType: this.camera.MediaType.PICTURE,\r\n      correctOrientation: true\r\n    }\r\n    this.camera.getPicture(options).then((imageData) => {\r\n      // imageData is either a base64 encoded string or a file URI\r\n      // If it's base64 (DATA_URL):\r\n      this.gallaryImgPath.push('data:image/jpeg;base64,' + imageData);\r\n      console.log('viraj', imageData);\r\n    }, (err) => {\r\n      // Handle error\r\n      alert(err);\r\n    });\r\n  }\r\n\r\n  //\r\n  createForm() {\r\n    this.addPostForm = this.formBuilder.group({\r\n      description: new FormControl(''),\r\n      file: new FormArray([this.formBuilder.group({\r\n        name: ['']\r\n      })]),\r\n    });\r\n  }\r\n\r\n  takeSnap() {\r\n    this.pickImage(this.camera.PictureSourceType.CAMERA);\r\n\r\n  }\r\n  fileTransfer: FileTransferObject = this.transfer.create();\r\n\r\n\r\n  token = localStorage.getItem('userToken');\r\n  uploadOpts: FileUploadOptions = {\r\n    fileKey: 'file',\r\n    fileName: 'somerandom.jpg',\r\n    httpMethod: 'POST',\r\n    headers: { 'Authorization': 'Bearer ' + this.token },\r\n    params: {}\r\n  };\r\n  // ----------------------------- Open gallery  with multiple --------------//\r\n\r\n  openGallery() {\r\n    let options: ImagePickerOptions = {\r\n      maximumImagesCount: 8,\r\n      outputType: 1\r\n    };\r\n\r\n    if (!this.imagePicker.hasReadPermission) {\r\n      this.imagePicker.requestReadPermission();\r\n      return null;\r\n    }\r\n    if (this.imagePicker.hasReadPermission) {\r\n      this.imagePicker.getPictures(options).then((results) => {\r\n        console.log('batman', results);\r\n        if (results == 'OK') {\r\n\r\n          return;\r\n        }\r\n        for (var i = 0; i < results.length; i++) {\r\n          this.gallaryImgPath.push('data:image/jpeg;base64,' + results[i]);\r\n        }\r\n      }, (err) => { alert(err) });\r\n    }\r\n  }\r\n\r\n  removeImg(index) {\r\n    this.gallaryImgPath.splice(index, 1);\r\n  }\r\n\r\n\r\n  //public fileUploader: FileUploader = new FileUploader({});\r\n  postImg() {\r\n    if (this.gallaryImgPath.length == 0 && !this.description) {\r\n      return false;\r\n    }\r\n    this.commonService.presentLoader();\r\n    this.postSubscrib =this.nutritionService.uploadPost({ 'file[]': this.gallaryImgPath, 'description': this.description }).subscribe((data: any) => {\r\n\r\n      this.commonService.dismissLoader();\r\n      this.router.navigateByUrl('tabs/consultant-profile');\r\n    }, (err) => {\r\n\r\n      this.commonService.dismissLoader();\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  //------------------ -- GO BACK  ------------\r\n  goBack() {\r\n    this.navCtrl.back();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    console.log('destroy');\r\n   this.description = null;\r\n   this.gallaryImgPath=null;\r\n  }\r\n}"],"sourceRoot":"webpack:///","file":"add-post-add-post-module-es5.js"}