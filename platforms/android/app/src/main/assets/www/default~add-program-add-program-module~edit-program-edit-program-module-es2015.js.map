{"version":3,"sources":["./node_modules/ionic2-calendar/calendar.js","./node_modules/ionic2-calendar/calendar.module.js","./node_modules/ionic2-calendar/calendar.service.js","./node_modules/ionic2-calendar/dayview.js","./node_modules/ionic2-calendar/index.js","./node_modules/ionic2-calendar/init-position-scroll.js","./node_modules/ionic2-calendar/monthview.js","./node_modules/ionic2-calendar/weekview.js","./src/app/calendar/calendar.component.html","./src/app/calendar/calendar.component.scss","./src/app/calendar/calendar.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACsE;AAClD;AAC9C;AACP;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0DAAY;AACpD,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,kCAAkC,0DAAY;AAC9C,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B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EAAE,4DAAY;AAC/C,sBAAsB,2DAAiB;AACvC,8BAA8B,2DAAiB;AAC/C,SAAS;AACT;AACA;AACA,CAAC;AAC2B;;;;;;;;;;;;;ACxB5B;AAAA;AAAA;AAAA;AAAA;AAAiC;AACU;AACZ;AAC/B;AACA;AACA,gDAAgD,4CAAO;AACvD,kDAAkD,4CAAO;AACzD,sCAAsC,4CAAO;AAC7C,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gDAAkB;AACxC,QAAQ,gEAAU;AAClB,QAAQ,gDAAkB;AAC1B;AACA;AACA,CAAC;AAC0B;;;;;;;;;;;;;AC1I3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACU;AACA;AACgG;AACtF;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,kCAAkC,0DAAY;AAC9C,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD,kCAAkC,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB,EAAE;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC,yBAAyB,iBAAiB;AAC1C;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,4DAAM;AACd,QAAQ,gDAAkB;AAC1B;AACA,kCAAkC,gDAAkB;AACpD,QAAQ,+DAAS;AACjB;AACA;AACA,iDAAiD,+BAA+B,iCAAiC,WAAW;AAC5H,2BAA2B,+DAAiB;AAC5C,SAAS;AACT,QAAQ,gDAAkB,uBAAuB,wDAAU;AAC3D;AACA;AACA,CAAC;AACsC;;;;;;;;;;;;;AC3DvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AAC8D;AACpD;AACA;AACU;AACrD;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,mCAAmC,0DAAY;AAC/C,kCAAkC,0DAAY;AAC9C,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,wDAAQ;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzuBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0EAA0E;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAkB;AACtB,QAAQ,+DAAS;AACjB,QAAQ,gDAAkB,gBAAgB,wDAAS;AACnD;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB,gBAAgB,yDAAW;AACrD;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB,gBAAgB,yDAAW;AACrD;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB,gBAAgB,yDAAW;AACrD;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAAkB;AACtB,QAAQ,2DAAK;AACb,QAAQ,gDAAkB;AAC1B;AACA,IAAI,gDAA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C,sBAAsB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,wDAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iBAAiB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA,yBAAyB,SAAS;AAClC,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA,uBAAuB,SAAS;AAChiBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA,kCAAkC,uBAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,gBAAgB,EAAE;AACpF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,gBAAgB,EAAE;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uEAAuE,gBAAgB,EAAE,uBAAuB;AAClJ;AACA;AACA;AACA;AACA;AACA,IAAI,gDAAkB;AACtB,QAAQ,+DAAS;AACjB,QAAQ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","file":"default~add-program-add-program-module~edit-program-edit-program-module-es2015.js","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport { Component, EventEmitter, Input, Output, TemplateRef, Inject, LOCALE_ID } from '@angular/core';\nimport { CalendarService } from './calendar.service';\nexport var Step;\n(function (Step) {\n    Step[Step[\"QuarterHour\"] = 15] = \"QuarterHour\";\n    Step[Step[\"HalfHour\"] = 30] = \"HalfHour\";\n    Step[Step[\"Hour\"] = 60] = \"Hour\";\n})(Step || (Step = {}));\nvar CalendarComponent = /** @class */ (function () {\n    function CalendarComponent(calendarService, appLocale) {\n        this.calendarService = calendarService;\n        this.appLocale = appLocale;\n        this.eventSource = [];\n        this.calendarMode = 'month';\n        this.formatDay = 'd';\n        this.formatDayHeader = 'EEE';\n        this.formatDayTitle = 'MMMM dd, yyyy';\n        this.formatWeekTitle = 'MMMM yyyy, \\'Week\\' w';\n        this.formatMonthTitle = 'MMMM yyyy';\n        this.formatWeekViewDayHeader = 'EEE d';\n        this.formatHourColumn = 'ha';\n        this.showEventDetail = true;\n        this.startingDayMonth = 0;\n        this.startingDayWeek = 0;\n        this.allDayLabel = 'all day';\n        this.noEventsLabel = 'No Events';\n        this.queryMode = 'local';\n        this.step = Step.Hour;\n        this.timeInterval = 60;\n        this.autoSelect = true;\n        this.dir = \"\";\n        this.scrollToHour = 0;\n        this.preserveScrollPosition = false;\n        this.lockSwipeToPrev = false;\n        this.lockSwipes = false;\n        this.locale = \"\";\n        this.startHour = 0;\n        this.endHour = 24;\n        this.onCurrentDateChanged = new EventEmitter();\n        this.onRangeChanged = new EventEmitter();\n        this.onEventSelected = new EventEmitter();\n        this.onTimeSelected = new EventEmitter();\n        this.onTitleChanged = new EventEmitter();\n        this.hourParts = 1;\n        this.hourSegments = 1;\n        this.locale = appLocale;\n    }\n    Object.defineProperty(CalendarComponent.prototype, \"currentDate\", {\n        get: function () {\n            return this._currentDate;\n        },\n        set: function (val) {\n            if (!val) {\n                val = new Date();\n            }\n            this._currentDate = val;\n            this.calendarService.setCurrentDate(val, true);\n            this.onCurrentDateChanged.emit(this._currentDate);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CalendarComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.autoSelect) {\n            if (this.autoSelect.toString() === 'false') {\n                this.autoSelect = false;\n            }\n            else {\n                this.autoSelect = true;\n            }\n        }\n        this.hourSegments = 60 / this.timeInterval;\n        this.hourParts = 60 / this.step;\n        if (this.hourParts <= this.hourSegments) {\n            this.hourParts = 1;\n        }\n        else {\n            this.hourParts = this.hourParts / this.hourSegments;\n        }\n        this.startHour = parseInt(this.startHour.toString());\n        this.endHour = parseInt(this.endHour.toString());\n        this.calendarService.queryMode = this.queryMode;\n        this.currentDateChangedFromChildrenSubscription = this.calendarService.currentDateChangedFromChildren$.subscribe(function (currentDate) {\n            _this._currentDate = currentDate;\n            _this.onCurrentDateChanged.emit(currentDate);\n        });\n    };\n    CalendarComponent.prototype.ngOnDestroy = function () {\n        if (this.currentDateChangedFromChildrenSubscription) {\n            this.currentDateChangedFromChildrenSubscription.unsubscribe();\n            this.currentDateChangedFromChildrenSubscription = null;\n        }\n    };\n    CalendarComponent.prototype.rangeChanged = function (range) {\n        this.onRangeChanged.emit(range);\n    };\n    CalendarComponent.prototype.eventSelected = function (event) {\n        this.onEventSelected.emit(event);\n    };\n    CalendarComponent.prototype.timeSelected = function (timeSelected) {\n        this.onTimeSelected.emit(timeSelected);\n    };\n    CalendarComponent.prototype.titleChanged = function (title) {\n        this.onTitleChanged.emit(title);\n    };\n    CalendarComponent.prototype.loadEvents = function () {\n        this.calendarService.loadEvents();\n    };\n    CalendarComponent.prototype.slideNext = function () {\n        this.calendarService.slide(1);\n    };\n    CalendarComponent.prototype.slidePrev = function () {\n        this.calendarService.slide(-1);\n    };\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Date),\n        tslib_1.__metadata(\"design:paramtypes\", [Date])\n    ], CalendarComponent.prototype, \"currentDate\", null);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], CalendarComponent.prototype, \"eventSource\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"calendarMode\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatDay\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatDayHeader\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatDayTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatWeekTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatMonthTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatWeekViewDayHeader\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"formatHourColumn\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], CalendarComponent.prototype, \"showEventDetail\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"startingDayMonth\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"startingDayWeek\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"allDayLabel\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"noEventsLabel\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"queryMode\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"step\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"timeInterval\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], CalendarComponent.prototype, \"autoSelect\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Function)\n    ], CalendarComponent.prototype, \"markDisabled\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"monthviewDisplayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"monthviewInactiveDisplayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"monthviewEventDetailTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewHeaderTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewAllDayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewNormalEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewAllDayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewNormalEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewInactiveAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"weekviewInactiveNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewInactiveAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], CalendarComponent.prototype, \"dayviewInactiveNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"dateFormatter\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"dir\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"scrollToHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], CalendarComponent.prototype, \"preserveScrollPosition\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], CalendarComponent.prototype, \"lockSwipeToPrev\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], CalendarComponent.prototype, \"lockSwipes\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], CalendarComponent.prototype, \"locale\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"startHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], CalendarComponent.prototype, \"endHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"sliderOptions\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"onCurrentDateChanged\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"onRangeChanged\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"onEventSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"onTimeSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], CalendarComponent.prototype, \"onTitleChanged\", void 0);\n    CalendarComponent = tslib_1.__decorate([\n        Component({\n            selector: 'calendar',\n            template: \"\\n        <ng-template #monthviewDefaultDisplayEventTemplate let-view=\\\"view\\\" let-row=\\\"row\\\" let-col=\\\"col\\\">\\n            {{view.dates[row*7+col].label}}\\n        </ng-template>\\n        <ng-template #monthviewDefaultEventDetailTemplate let-showEventDetail=\\\"showEventDetail\\\" let-selectedDate=\\\"selectedDate\\\" let-noEventsLabel=\\\"noEventsLabel\\\">\\n            <ion-list class=\\\"event-detail-container\\\" has-bouncing=\\\"false\\\" *ngIf=\\\"showEventDetail\\\" overflow-scroll=\\\"false\\\">\\n                <ion-item *ngFor=\\\"let event of selectedDate?.events\\\" (click)=\\\"eventSelected(event)\\\">\\n                        <span *ngIf=\\\"!event.allDay\\\" class=\\\"monthview-eventdetail-timecolumn\\\">{{event.startTime|date: 'HH:mm'}}\\n                            -\\n                            {{event.endTime|date: 'HH:mm'}}\\n                        </span>\\n                    <span *ngIf=\\\"event.allDay\\\" class=\\\"monthview-eventdetail-timecolumn\\\">{{allDayLabel}}</span>\\n                    <span class=\\\"event-detail\\\">  |  {{event.title}}</span>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"selectedDate?.events.length==0\\\">\\n                    <div class=\\\"no-events-label\\\">{{noEventsLabel}}</div>\\n                </ion-item>\\n            </ion-list>\\n        </ng-template>\\n        <ng-template #defaultWeekviewHeaderTemplate let-viewDate=\\\"viewDate\\\">\\n            {{ viewDate.dayHeader }}\\n        </ng-template>\\n        <ng-template #defaultAllDayEventTemplate let-displayEvent=\\\"displayEvent\\\">\\n            <div class=\\\"calendar-event-inner\\\">{{displayEvent.event.title}}</div>\\n        </ng-template>\\n        <ng-template #defaultNormalEventTemplate let-displayEvent=\\\"displayEvent\\\">\\n            <div class=\\\"calendar-event-inner\\\">{{displayEvent.event.title}}</div>\\n        </ng-template>\\n        <ng-template #defaultWeekViewAllDayEventSectionTemplate let-day=\\\"day\\\" let-eventTemplate=\\\"eventTemplate\\\">\\n            <div [ngClass]=\\\"{'calendar-event-wrap': day.events}\\\" *ngIf=\\\"day.events\\\"\\n                 [ngStyle]=\\\"{height: 25*day.events.length+'px'}\\\">\\n                <div *ngFor=\\\"let displayEvent of day.events\\\" class=\\\"calendar-event\\\" tappable\\n                     (click)=\\\"eventSelected(displayEvent.event)\\\"\\n                     [ngStyle]=\\\"{top: 25*displayEvent.position+'px', width: 100*(displayEvent.endIndex-displayEvent.startIndex)+'%', height: '25px'}\\\">\\n                    <ng-template [ngTemplateOutlet]=\\\"eventTemplate\\\"\\n                                 [ngTemplateOutletContext]=\\\"{displayEvent:displayEvent}\\\">\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </ng-template>\\n        <ng-template #defaultDayViewAllDayEventSectionTemplate let-allDayEvents=\\\"allDayEvents\\\" let-eventTemplate=\\\"eventTemplate\\\">\\n            <div *ngFor=\\\"let displayEvent of allDayEvents; let eventIndex=index\\\"\\n                 class=\\\"calendar-event\\\" tappable\\n                 (click)=\\\"eventSelected(displayEvent.event)\\\"\\n                 [ngStyle]=\\\"{top: 25*eventIndex+'px',width: '100%',height:'25px'}\\\">\\n                <ng-template [ngTemplateOutlet]=\\\"eventTemplate\\\"\\n                             [ngTemplateOutletContext]=\\\"{displayEvent:displayEvent}\\\">\\n                </ng-template>\\n            </div>\\n        </ng-template>\\n        <ng-template #defaultNormalEventSectionTemplate let-tm=\\\"tm\\\" let-hourParts=\\\"hourParts\\\" let-eventTemplate=\\\"eventTemplate\\\">\\n            <div [ngClass]=\\\"{'calendar-event-wrap': tm.events}\\\" *ngIf=\\\"tm.events\\\">\\n                <div *ngFor=\\\"let displayEvent of tm.events\\\" class=\\\"calendar-event\\\" tappable\\n                     (click)=\\\"eventSelected(displayEvent.event)\\\"\\n                     [ngStyle]=\\\"{top: (37*displayEvent.startOffset/hourParts)+'px',left: 100/displayEvent.overlapNumber*displayEvent.position+'%', width: 100/displayEvent.overlapNumber+'%', height: 37*(displayEvent.endIndex -displayEvent.startIndex - (displayEvent.endOffset + displayEvent.startOffset)/hourParts)+'px'}\\\">\\n                    <ng-template [ngTemplateOutlet]=\\\"eventTemplate\\\"\\n                                 [ngTemplateOutletContext]=\\\"{displayEvent:displayEvent}\\\">\\n                    </ng-template>\\n                </div>\\n            </div>\\n        </ng-template>\\n        <ng-template #defaultInactiveAllDayEventSectionTemplate>\\n        </ng-template>\\n        <ng-template #defaultInactiveNormalEventSectionTemplate>\\n        </ng-template>\\n\\n        <div [ngSwitch]=\\\"calendarMode\\\" class=\\\"{{calendarMode}}view-container\\\">\\n            <monthview *ngSwitchCase=\\\"'month'\\\"\\n                [formatDay]=\\\"formatDay\\\"\\n                [formatDayHeader]=\\\"formatDayHeader\\\"\\n                [formatMonthTitle]=\\\"formatMonthTitle\\\"\\n                [startingDayMonth]=\\\"startingDayMonth\\\"\\n                [showEventDetail]=\\\"showEventDetail\\\"\\n                [noEventsLabel]=\\\"noEventsLabel\\\"\\n                [autoSelect]=\\\"autoSelect\\\"\\n                [eventSource]=\\\"eventSource\\\"\\n                [markDisabled]=\\\"markDisabled\\\"\\n                [monthviewDisplayEventTemplate]=\\\"monthviewDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\\\"\\n                [monthviewInactiveDisplayEventTemplate]=\\\"monthviewInactiveDisplayEventTemplate||monthviewDefaultDisplayEventTemplate\\\"\\n                [monthviewEventDetailTemplate]=\\\"monthviewEventDetailTemplate||monthviewDefaultEventDetailTemplate\\\"\\n                [locale]=\\\"locale\\\"\\n                [dateFormatter]=\\\"dateFormatter\\\"\\n                [dir]=\\\"dir\\\"\\n                [lockSwipeToPrev]=\\\"lockSwipeToPrev\\\"\\n                [lockSwipes]=\\\"lockSwipes\\\"\\n                [sliderOptions]=\\\"sliderOptions\\\"\\n                (onRangeChanged)=\\\"rangeChanged($event)\\\"\\n                (onEventSelected)=\\\"eventSelected($event)\\\"\\n                (onTimeSelected)=\\\"timeSelected($event)\\\"\\n                (onTitleChanged)=\\\"titleChanged($event)\\\">\\n            </monthview>\\n            <weekview *ngSwitchCase=\\\"'week'\\\"\\n                [formatWeekTitle]=\\\"formatWeekTitle\\\"\\n                [formatWeekViewDayHeader]=\\\"formatWeekViewDayHeader\\\"\\n                [formatHourColumn]=\\\"formatHourColumn\\\"\\n                [startingDayWeek]=\\\"startingDayWeek\\\"\\n                [allDayLabel]=\\\"allDayLabel\\\"\\n                [hourParts]=\\\"hourParts\\\"\\n                [autoSelect]=\\\"autoSelect\\\"\\n                [hourSegments]=\\\"hourSegments\\\"\\n                [eventSource]=\\\"eventSource\\\"\\n                [markDisabled]=\\\"markDisabled\\\"\\n                [weekviewHeaderTemplate]=\\\"weekviewHeaderTemplate||defaultWeekviewHeaderTemplate\\\"\\n                [weekviewAllDayEventTemplate]=\\\"weekviewAllDayEventTemplate||defaultAllDayEventTemplate\\\"\\n                [weekviewNormalEventTemplate]=\\\"weekviewNormalEventTemplate||defaultNormalEventTemplate\\\"\\n                [weekviewAllDayEventSectionTemplate]=\\\"weekviewAllDayEventSectionTemplate||defaultWeekViewAllDayEventSectionTemplate\\\"\\n                [weekviewNormalEventSectionTemplate]=\\\"weekviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\\\"\\n                [weekviewInactiveAllDayEventSectionTemplate]=\\\"weekviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\\\"\\n                [weekviewInactiveNormalEventSectionTemplate]=\\\"weekviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\\\"\\n                [locale]=\\\"locale\\\"\\n                [dateFormatter]=\\\"dateFormatter\\\"\\n                [dir]=\\\"dir\\\"\\n                [scrollToHour]=\\\"scrollToHour\\\"\\n                [preserveScrollPosition]=\\\"preserveScrollPosition\\\"\\n                [lockSwipeToPrev]=\\\"lockSwipeToPrev\\\"\\n                [lockSwipes]=\\\"lockSwipes\\\"\\n                [startHour]=\\\"startHour\\\"\\n                [endHour]=\\\"endHour\\\"\\n                [sliderOptions]=\\\"sliderOptions\\\"\\n                (onRangeChanged)=\\\"rangeChanged($event)\\\"\\n                (onEventSelected)=\\\"eventSelected($event)\\\"\\n                (onTimeSelected)=\\\"timeSelected($event)\\\"\\n                (onTitleChanged)=\\\"titleChanged($event)\\\">\\n            </weekview>\\n            <dayview *ngSwitchCase=\\\"'day'\\\"\\n                [formatDayTitle]=\\\"formatDayTitle\\\"\\n                [formatHourColumn]=\\\"formatHourColumn\\\"\\n                [allDayLabel]=\\\"allDayLabel\\\"\\n                [hourParts]=\\\"hourParts\\\"\\n                [hourSegments]=\\\"hourSegments\\\"\\n                [eventSource]=\\\"eventSource\\\"\\n                [markDisabled]=\\\"markDisabled\\\"\\n                [dayviewAllDayEventTemplate]=\\\"dayviewAllDayEventTemplate||defaultAllDayEventTemplate\\\"\\n                [dayviewNormalEventTemplate]=\\\"dayviewNormalEventTemplate||defaultNormalEventTemplate\\\"\\n                [dayviewAllDayEventSectionTemplate]=\\\"dayviewAllDayEventSectionTemplate||defaultDayViewAllDayEventSectionTemplate\\\"\\n                [dayviewNormalEventSectionTemplate]=\\\"dayviewNormalEventSectionTemplate||defaultNormalEventSectionTemplate\\\"\\n                [dayviewInactiveAllDayEventSectionTemplate]=\\\"dayviewInactiveAllDayEventSectionTemplate||defaultInactiveAllDayEventSectionTemplate\\\"\\n                [dayviewInactiveNormalEventSectionTemplate]=\\\"dayviewInactiveNormalEventSectionTemplate||defaultInactiveNormalEventSectionTemplate\\\"\\n                [locale]=\\\"locale\\\"\\n                [dateFormatter]=\\\"dateFormatter\\\"\\n                [dir]=\\\"dir\\\"\\n                [scrollToHour]=\\\"scrollToHour\\\"\\n                [preserveScrollPosition]=\\\"preserveScrollPosition\\\"\\n                [lockSwipeToPrev]=\\\"lockSwipeToPrev\\\"\\n                [lockSwipes]=\\\"lockSwipes\\\"\\n                [startHour]=\\\"startHour\\\"\\n                [endHour]=\\\"endHour\\\"\\n                [sliderOptions]=\\\"sliderOptions\\\"\\n                (onRangeChanged)=\\\"rangeChanged($event)\\\"\\n                (onEventSelected)=\\\"eventSelected($event)\\\"\\n                (onTimeSelected)=\\\"timeSelected($event)\\\"\\n                (onTitleChanged)=\\\"titleChanged($event)\\\">\\n            </dayview>\\n        </div>\\n    \",\n            styles: [\"\\n        :host > div { height: 100%; }\\n\\n        .event-detail-container {\\n          border-top: 2px darkgrey solid;\\n        }\\n\\n        .no-events-label {\\n          font-weight: bold;\\n          color: darkgrey;\\n          text-align: center;\\n        }\\n\\n        .event-detail {\\n          cursor: pointer;\\n          white-space: nowrap;\\n          text-overflow: ellipsis;\\n        }\\n\\n        .monthview-eventdetail-timecolumn {\\n          width: 110px;\\n          overflow: hidden;\\n        }\\n\\n        .calendar-event-inner {\\n          overflow: hidden;\\n          background-color: #3a87ad;\\n          color: white;\\n          height: 100%;\\n          width: 100%;\\n          padding: 2px;\\n          line-height: 15px;\\n          text-align: initial;\\n        }\\n\\n        @media (max-width: 750px) {\\n          .calendar-event-inner {\\n            font-size: 12px;\\n          }\\n        }\\n    \"],\n            providers: [CalendarService]\n        }),\n        tslib_1.__param(1, Inject(LOCALE_ID)),\n        tslib_1.__metadata(\"design:paramtypes\", [CalendarService, String])\n    ], CalendarComponent);\n    return CalendarComponent;\n}());\nexport { CalendarComponent };\n","import * as tslib_1 from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { MonthViewComponent } from './monthview';\nimport { WeekViewComponent } from './weekview';\nimport { DayViewComponent } from './dayview';\nimport { CalendarComponent } from './calendar';\nimport { initPositionScrollComponent } from './init-position-scroll';\nvar NgCalendarModule = /** @class */ (function () {\n    function NgCalendarModule() {\n    }\n    NgCalendarModule = tslib_1.__decorate([\n        NgModule({\n            declarations: [\n                MonthViewComponent, WeekViewComponent, DayViewComponent, CalendarComponent, initPositionScrollComponent\n            ],\n            imports: [IonicModule, CommonModule],\n            exports: [CalendarComponent],\n            entryComponents: [CalendarComponent]\n        })\n    ], NgCalendarModule);\n    return NgCalendarModule;\n}());\nexport { NgCalendarModule };\n","import * as tslib_1 from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nvar CalendarService = /** @class */ (function () {\n    function CalendarService() {\n        this.currentDateChangedFromParent = new Subject();\n        this.currentDateChangedFromChildren = new Subject();\n        this.eventSourceChanged = new Subject();\n        this.slideChanged = new Subject();\n        this.currentDateChangedFromParent$ = this.currentDateChangedFromParent.asObservable();\n        this.currentDateChangedFromChildren$ = this.currentDateChangedFromChildren.asObservable();\n        this.eventSourceChanged$ = this.eventSourceChanged.asObservable();\n        this.slideChanged$ = this.slideChanged.asObservable();\n    }\n    CalendarService.prototype.setCurrentDate = function (val, fromParent) {\n        if (fromParent === void 0) { fromParent = false; }\n        this._currentDate = new Date(val);\n        if (fromParent) {\n            this.currentDateChangedFromParent.next(val);\n        }\n        else {\n            this.currentDateChangedFromChildren.next(val);\n        }\n    };\n    Object.defineProperty(CalendarService.prototype, \"currentDate\", {\n        get: function () {\n            return this._currentDate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CalendarService.prototype.rangeChanged = function (component) {\n        if (this.queryMode === 'local') {\n            if (component.eventSource && component.onDataLoaded) {\n                component.onDataLoaded();\n            }\n        }\n        else if (this.queryMode === 'remote') {\n            var rangeStart = new Date(component.range.startTime.getTime()), rangeEnd = new Date(component.range.endTime.getTime());\n            rangeStart.setHours(0);\n            if (rangeStart.getHours() === 23) {\n                rangeStart.setTime(rangeStart.getTime() + 3600000);\n            }\n            rangeEnd.setHours(0);\n            if (rangeEnd.getHours() === 23) {\n                rangeEnd.setTime(rangeEnd.getTime() + 3600000);\n            }\n            component.onRangeChanged.emit({\n                startTime: rangeStart,\n                endTime: rangeEnd\n            });\n        }\n    };\n    CalendarService.prototype.getStep = function (mode) {\n        switch (mode) {\n            case 'month':\n                return {\n                    years: 0,\n                    months: 1,\n                    days: 0\n                };\n            case 'week':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 7\n                };\n            case 'day':\n                return {\n                    years: 0,\n                    months: 0,\n                    days: 1\n                };\n        }\n    };\n    CalendarService.prototype.getAdjacentCalendarDate = function (mode, direction) {\n        var calculateCalendarDate = this.currentDate;\n        var step = this.getStep(mode), year = calculateCalendarDate.getFullYear() + direction * step.years, month = calculateCalendarDate.getMonth() + direction * step.months, date = calculateCalendarDate.getDate() + direction * step.days;\n        calculateCalendarDate = new Date(year, month, date, 12, 0, 0);\n        if (mode === 'month') {\n            var firstDayInNextMonth = new Date(year, month + 1, 1, 12, 0, 0);\n            if (firstDayInNextMonth.getTime() <= calculateCalendarDate.getTime()) {\n                calculateCalendarDate = new Date(firstDayInNextMonth.getTime() - 24 * 60 * 60 * 1000);\n            }\n        }\n        return calculateCalendarDate;\n    };\n    CalendarService.prototype.getAdjacentViewStartTime = function (component, direction) {\n        var adjacentCalendarDate = this.getAdjacentCalendarDate(component.mode, direction);\n        return component.getRange(adjacentCalendarDate).startTime;\n    };\n    CalendarService.prototype.populateAdjacentViews = function (component) {\n        var currentViewStartDate, currentViewData, toUpdateViewIndex, currentViewIndex = component.currentViewIndex;\n        if (component.direction === 1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n            toUpdateViewIndex = (currentViewIndex + 1) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        }\n        else if (component.direction === -1) {\n            currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n            toUpdateViewIndex = (currentViewIndex + 2) % 3;\n            component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n        }\n        else {\n            if (!component.views) {\n                currentViewData = [];\n                currentViewStartDate = component.range.startTime;\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                currentViewData.push(component.getViewData(currentViewStartDate));\n                component.views = currentViewData;\n            }\n            else {\n                currentViewStartDate = component.range.startTime;\n                component.views[currentViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, -1);\n                toUpdateViewIndex = (currentViewIndex + 2) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n                currentViewStartDate = this.getAdjacentViewStartTime(component, 1);\n                toUpdateViewIndex = (currentViewIndex + 1) % 3;\n                component.views[toUpdateViewIndex] = component.getViewData(currentViewStartDate);\n            }\n        }\n    };\n    CalendarService.prototype.loadEvents = function () {\n        this.eventSourceChanged.next();\n    };\n    CalendarService.prototype.slide = function (direction) {\n        this.slideChanged.next(direction);\n    };\n    CalendarService = tslib_1.__decorate([\n        Injectable(),\n        tslib_1.__metadata(\"design:paramtypes\", [])\n    ], CalendarService);\n    return CalendarService;\n}());\nexport { CalendarService };\n","import * as tslib_1 from \"tslib\";\nimport { DatePipe } from '@angular/common';\nimport { IonSlides } from '@ionic/angular';\nimport { Component, HostBinding, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, TemplateRef, ElementRef } from '@angular/core';\nimport { CalendarService } from './calendar.service';\nvar DayViewComponent = /** @class */ (function () {\n    function DayViewComponent(calendarService, elm) {\n        this.calendarService = calendarService;\n        this.elm = elm;\n        this.class = true;\n        this.dir = '';\n        this.scrollToHour = 0;\n        this.onRangeChanged = new EventEmitter();\n        this.onEventSelected = new EventEmitter();\n        this.onTimeSelected = new EventEmitter();\n        this.onTitleChanged = new EventEmitter(true);\n        this.views = [];\n        this.currentViewIndex = 0;\n        this.direction = 0;\n        this.mode = 'day';\n        this.inited = false;\n        this.callbackOnInit = true;\n    }\n    DayViewComponent_1 = DayViewComponent;\n    DayViewComponent.createDateObjects = function (startTime, startHour, endHour, timeInterval) {\n        var rows = [], currentHour = 0, currentDate = startTime.getDate();\n        var time, hourStep, minStep;\n        if (timeInterval < 1) {\n            hourStep = Math.floor(1 / timeInterval);\n            minStep = 60;\n        }\n        else {\n            hourStep = 1;\n            minStep = Math.floor(60 / timeInterval);\n        }\n        for (var hour = startHour; hour < endHour; hour += hourStep) {\n            for (var interval = 0; interval < 60; interval += minStep) {\n                time = new Date(startTime.getTime());\n                time.setHours(currentHour + hour, interval);\n                time.setDate(currentDate);\n                rows.push({\n                    time: time,\n                    events: []\n                });\n            }\n        }\n        return rows;\n    };\n    DayViewComponent.compareEventByStartOffset = function (eventA, eventB) {\n        return eventA.startOffset - eventB.startOffset;\n    };\n    DayViewComponent.calculateWidth = function (orderedEvents, size, hourParts) {\n        var totalSize = size * hourParts, cells = new Array(totalSize);\n        // sort by position in descending order, the right most columns should be calculated first\n        orderedEvents.sort(function (eventA, eventB) {\n            return eventB.position - eventA.position;\n        });\n        for (var i_1 = 0; i_1 < totalSize; i_1 += 1) {\n            cells[i_1] = {\n                calculated: false,\n                events: []\n            };\n        }\n        var len = orderedEvents.length;\n        for (var i_2 = 0; i_2 < len; i_2 += 1) {\n            var event_1 = orderedEvents[i_2];\n            var index = event_1.startIndex * hourParts + event_1.startOffset;\n            while (index < event_1.endIndex * hourParts - event_1.endOffset) {\n                cells[index].events.push(event_1);\n                index += 1;\n            }\n        }\n        var i = 0;\n        while (i < len) {\n            var event_2 = orderedEvents[i];\n            if (!event_2.overlapNumber) {\n                var overlapNumber = event_2.position + 1;\n                event_2.overlapNumber = overlapNumber;\n                var eventQueue = [event_2];\n                while (event_2 = eventQueue.shift()) {\n                    var index = event_2.startIndex * hourParts + event_2.startOffset;\n                    while (index < event_2.endIndex * hourParts - event_2.endOffset) {\n                        if (!cells[index].calculated) {\n                            cells[index].calculated = true;\n                            if (cells[index].events) {\n                                var eventCountInCell = cells[index].events.length;\n                                for (var j = 0; j < eventCountInCell; j += 1) {\n                                    var currentEventInCell = cells[index].events[j];\n                                    if (!currentEventInCell.overlapNumber) {\n                                        currentEventInCell.overlapNumber = overlapNumber;\n                                        eventQueue.push(currentEventInCell);\n                                    }\n                                }\n                            }\n                        }\n                        index += 1;\n                    }\n                }\n            }\n            i += 1;\n        }\n    };\n    DayViewComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\n        if (this.dateFormatter && this.dateFormatter.formatDayViewTitle) {\n            this.formatTitle = this.dateFormatter.formatDayViewTitle;\n        }\n        else {\n            var datePipe_1 = new DatePipe(this.locale);\n            this.formatTitle = function (date) {\n                return datePipe_1.transform(date, this.formatDayTitle);\n            };\n        }\n        if (this.dateFormatter && this.dateFormatter.formatDayViewHourColumn) {\n            this.formatHourColumnLabel = this.dateFormatter.formatDayViewHourColumn;\n        }\n        else {\n            var datePipe_2 = new DatePipe(this.locale);\n            this.formatHourColumnLabel = function (date) {\n                return datePipe_2.transform(date, this.formatHourColumn);\n            };\n        }\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n        this.refreshView();\n        this.hourColumnLabels = this.getHourColumnLabels();\n        this.inited = true;\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(function (currentDate) {\n            _this.refreshView();\n        });\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(function () {\n            _this.onDataLoaded();\n        });\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(function (direction) {\n            if (direction === 1) {\n                _this.slider.slideNext();\n            }\n            else if (direction === -1) {\n                _this.slider.slidePrev();\n            }\n        });\n    };\n    DayViewComponent.prototype.ngAfterViewInit = function () {\n        var title = this.getTitle();\n        this.onTitleChanged.emit(title);\n        if (this.scrollToHour > 0) {\n            var hourColumns_1 = this.elm.nativeElement.querySelector('.dayview-normal-event-container').querySelectorAll('.calendar-hour-column');\n            var me_1 = this;\n            setTimeout(function () {\n                me_1.initScrollPosition = hourColumns_1[me_1.scrollToHour - me_1.startHour].offsetTop;\n            }, 50);\n        }\n    };\n    DayViewComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.inited) {\n            return;\n        }\n        var eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n        var lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n        var lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    };\n    DayViewComponent.prototype.ngOnDestroy = function () {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n    };\n    DayViewComponent.prototype.onSlideChanged = function () {\n        var _this = this;\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n        var direction = 0;\n        var currentViewIndex = this.currentViewIndex;\n        this.slider.getActiveIndex().then(function (currentSlideIndex) {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if (isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            }\n            else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                _this.slider.slideTo(1, 0, false);\n            }\n            else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            }\n            else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                _this.slider.slideTo(3, 0, false);\n            }\n            _this.currentViewIndex = currentSlideIndex;\n            _this.move(direction);\n        });\n    };\n    DayViewComponent.prototype.move = function (direction) {\n        if (direction === 0) {\n            return;\n        }\n        this.direction = direction;\n        var adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n        this.calendarService.setCurrentDate(adjacentDate);\n        this.refreshView();\n        this.direction = 0;\n    };\n    DayViewComponent.prototype.getHourColumnLabels = function () {\n        var hourColumnLabels = [];\n        for (var hour = 0, length_1 = this.views[0].rows.length; hour < length_1; hour += 1) {\n            // handle edge case for DST\n            if (hour === 0 && this.views[0].rows[hour].time.getHours() !== this.startHour) {\n                var time = new Date(this.views[0].rows[hour].time);\n                time.setDate(time.getDate() + 1);\n                time.setHours(this.startHour);\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\n            }\n            else {\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour].time));\n            }\n        }\n        return hourColumnLabels;\n    };\n    DayViewComponent.prototype.getViewData = function (startTime) {\n        return {\n            rows: DayViewComponent_1.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\n            allDayEvents: []\n        };\n    };\n    DayViewComponent.prototype.getRange = function (currentDate) {\n        var year = currentDate.getFullYear(), month = currentDate.getMonth(), date = currentDate.getDate(), startTime = new Date(year, month, date, 12, 0, 0), endTime = new Date(year, month, date + 1, 12, 0, 0);\n        return {\n            startTime: startTime,\n            endTime: endTime\n        };\n    };\n    DayViewComponent.prototype.onDataLoaded = function () {\n        var eventSource = this.eventSource, len = eventSource ? eventSource.length : 0, startTime = this.range.startTime, endTime = this.range.endTime, utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()), utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()), currentViewIndex = this.currentViewIndex, rows = this.views[currentViewIndex].rows, allDayEvents = this.views[currentViewIndex].allDayEvents = [], oneHour = 3600000, eps = 0.016, rangeStartRowIndex = this.startHour * this.hourSegments, rangeEndRowIndex = this.endHour * this.hourSegments;\n        var normalEventInRange = false;\n        for (var hour = 0; hour < this.hourRange; hour += 1) {\n            rows[hour].events = [];\n        }\n        for (var i = 0; i < len; i += 1) {\n            var event_3 = eventSource[i];\n            var eventStartTime = event_3.startTime;\n            var eventEndTime = event_3.endTime;\n            var eventUTCStartTime = void 0, eventUTCEndTime = void 0;\n            if (event_3.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            }\n            else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\n                continue;\n            }\n            if (event_3.allDay) {\n                allDayEvents.push({\n                    event: event_3\n                });\n            }\n            else {\n                normalEventInRange = true;\n                var timeDifferenceStart = void 0;\n                if (eventUTCStartTime < utcStartTime) {\n                    timeDifferenceStart = 0;\n                }\n                else {\n                    timeDifferenceStart = (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\n                }\n                var timeDifferenceEnd = void 0;\n                if (eventUTCEndTime > utcEndTime) {\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\n                }\n                else {\n                    timeDifferenceEnd = (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\n                }\n                var startIndex = Math.floor(timeDifferenceStart);\n                var endIndex = Math.ceil(timeDifferenceEnd - eps);\n                var startOffset = 0;\n                var endOffset = 0;\n                if (this.hourParts !== 1) {\n                    if (startIndex < rangeStartRowIndex) {\n                        startOffset = 0;\n                    }\n                    else {\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\n                    }\n                    if (endIndex > rangeEndRowIndex) {\n                        endOffset = 0;\n                    }\n                    else {\n                        endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\n                    }\n                }\n                if (startIndex < rangeStartRowIndex) {\n                    startIndex = 0;\n                }\n                else {\n                    startIndex -= rangeStartRowIndex;\n                }\n                if (endIndex > rangeEndRowIndex) {\n                    endIndex = rangeEndRowIndex;\n                }\n                endIndex -= rangeStartRowIndex;\n                if (startIndex < endIndex) {\n                    var displayEvent = {\n                        event: event_3,\n                        startIndex: startIndex,\n                        endIndex: endIndex,\n                        startOffset: startOffset,\n                        endOffset: endOffset\n                    };\n                    var eventSet = rows[startIndex].events;\n                    if (eventSet) {\n                        eventSet.push(displayEvent);\n                    }\n                    else {\n                        eventSet = [];\n                        eventSet.push(displayEvent);\n                        rows[startIndex].events = eventSet;\n                    }\n                }\n            }\n        }\n        if (normalEventInRange) {\n            var orderedEvents = [];\n            for (var hour = 0; hour < this.hourRange; hour += 1) {\n                if (rows[hour].events) {\n                    rows[hour].events.sort(DayViewComponent_1.compareEventByStartOffset);\n                    orderedEvents = orderedEvents.concat(rows[hour].events);\n                }\n            }\n            if (orderedEvents.length > 0) {\n                this.placeEvents(orderedEvents);\n            }\n        }\n    };\n    DayViewComponent.prototype.refreshView = function () {\n        this.range = this.getRange(this.calendarService.currentDate);\n        if (this.inited) {\n            var title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n        this.calendarService.populateAdjacentViews(this);\n        this.calendarService.rangeChanged(this);\n    };\n    DayViewComponent.prototype.getTitle = function () {\n        var startingDate = new Date(this.range.startTime.getTime());\n        startingDate.setHours(12, 0, 0, 0);\n        return this.formatTitle(startingDate);\n    };\n    DayViewComponent.prototype.select = function (selectedTime, events) {\n        var disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedTime);\n        }\n        this.onTimeSelected.emit({\n            selectedTime: selectedTime,\n            events: events.map(function (e) { return e.event; }),\n            disabled: disabled\n        });\n    };\n    DayViewComponent.prototype.placeEvents = function (orderedEvents) {\n        this.calculatePosition(orderedEvents);\n        DayViewComponent_1.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\n    };\n    DayViewComponent.prototype.placeAllDayEvents = function (orderedEvents) {\n        this.calculatePosition(orderedEvents);\n    };\n    DayViewComponent.prototype.overlap = function (event1, event2) {\n        var earlyEvent = event1, lateEvent = event2;\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\n            earlyEvent = event2;\n            lateEvent = event1;\n        }\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\n            return false;\n        }\n        else {\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\n        }\n    };\n    DayViewComponent.prototype.calculatePosition = function (events) {\n        var len = events.length, isForbidden = new Array(len);\n        var maxColumn = 0, col;\n        for (var i = 0; i < len; i += 1) {\n            for (col = 0; col < maxColumn; col += 1) {\n                isForbidden[col] = false;\n            }\n            for (var j = 0; j < i; j += 1) {\n                if (this.overlap(events[i], events[j])) {\n                    isForbidden[events[j].position] = true;\n                }\n            }\n            for (col = 0; col < maxColumn; col += 1) {\n                if (!isForbidden[col]) {\n                    break;\n                }\n            }\n            if (col < maxColumn) {\n                events[i].position = col;\n            }\n            else {\n                events[i].position = maxColumn++;\n            }\n        }\n        if (this.dir === 'rtl') {\n            for (var i = 0; i < len; i += 1) {\n                events[i].position = maxColumn - 1 - events[i].position;\n            }\n        }\n    };\n    DayViewComponent.prototype.eventSelected = function (event) {\n        this.onEventSelected.emit(event);\n    };\n    DayViewComponent.prototype.setScrollPosition = function (scrollPosition) {\n        this.initScrollPosition = scrollPosition;\n    };\n    var DayViewComponent_1;\n    tslib_1.__decorate([\n        ViewChild('daySlider'),\n        tslib_1.__metadata(\"design:type\", IonSlides)\n    ], DayViewComponent.prototype, \"slider\", void 0);\n    tslib_1.__decorate([\n        HostBinding('class.dayview'),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"class\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewAllDayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewNormalEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewInactiveAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], DayViewComponent.prototype, \"dayviewInactiveNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], DayViewComponent.prototype, \"formatHourColumn\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], DayViewComponent.prototype, \"formatDayTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], DayViewComponent.prototype, \"allDayLabel\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], DayViewComponent.prototype, \"hourParts\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], DayViewComponent.prototype, \"eventSource\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Function)\n    ], DayViewComponent.prototype, \"markDisabled\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], DayViewComponent.prototype, \"locale\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"dateFormatter\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"dir\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"scrollToHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], DayViewComponent.prototype, \"preserveScrollPosition\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], DayViewComponent.prototype, \"lockSwipeToPrev\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], DayViewComponent.prototype, \"lockSwipes\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], DayViewComponent.prototype, \"startHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], DayViewComponent.prototype, \"endHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"sliderOptions\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], DayViewComponent.prototype, \"hourSegments\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"onRangeChanged\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"onEventSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"onTimeSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], DayViewComponent.prototype, \"onTitleChanged\", void 0);\n    DayViewComponent = DayViewComponent_1 = tslib_1.__decorate([\n        Component({\n            selector: 'dayview',\n            template: \"\\n        <ion-slides #daySlider [options]=\\\"sliderOptions\\\" [dir]=\\\"dir\\\" (ionSlideDidChange)=\\\"onSlideChanged()\\\" class=\\\"slides-container\\\">\\n            <ion-slide class=\\\"slide-container\\\">\\n                <div class=\\\"dayview-allday-table\\\">\\n                    <div class=\\\"dayview-allday-label\\\">{{allDayLabel}}</div>\\n                    <div class=\\\"dayview-allday-content-wrapper scroll-content\\\">\\n                        <table class=\\\"table table-bordered dayview-allday-content-table\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td class=\\\"calendar-cell\\\" [ngClass]=\\\"{'calendar-event-wrap':views[0].allDayEvents.length>0}\\\"\\n                                    [ngStyle]=\\\"{height: 25*views[0].allDayEvents.length+'px'}\\\"\\n                                    *ngIf=\\\"0===currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[0].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\\\">\\n                                    </ng-template>\\n                                </td>\\n                                <td class=\\\"calendar-cell\\\" *ngIf=\\\"0!==currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[0].allDayEvents}\\\">\\n                                    </ng-template>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <init-position-scroll *ngIf=\\\"0===currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\" [emitEvent]=\\\"preserveScrollPosition\\\"\\n                                      (onScroll)=\\\"setScrollPosition($event)\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[0].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\" tappable (click)=\\\"select(tm.time, tm.events)\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n                <init-position-scroll *ngIf=\\\"0!==currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[0].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n            </ion-slide>\\n            <ion-slide class=\\\"slide-container\\\">\\n                <div class=\\\"dayview-allday-table\\\">\\n                    <div class=\\\"dayview-allday-label\\\">{{allDayLabel}}</div>\\n                    <div class=\\\"dayview-allday-content-wrapper scroll-content\\\">\\n                        <table class=\\\"table table-bordered dayview-allday-content-table\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td class=\\\"calendar-cell\\\" [ngClass]=\\\"{'calendar-event-wrap':views[1].allDayEvents.length>0}\\\"\\n                                    [ngStyle]=\\\"{height: 25*views[1].allDayEvents.length+'px'}\\\"\\n                                    *ngIf=\\\"1===currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[1].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\\\">\\n                                    </ng-template>\\n                                </td>\\n                                <td class=\\\"calendar-cell\\\" *ngIf=\\\"1!==currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[1].allDayEvents}\\\">\\n                                    </ng-template>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <init-position-scroll *ngIf=\\\"1===currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\" [emitEvent]=\\\"preserveScrollPosition\\\"\\n                                      (onScroll)=\\\"setScrollPosition($event)\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[1].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\" tappable (click)=\\\"select(tm.time, tm.events)\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n                <init-position-scroll *ngIf=\\\"1!==currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[1].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n            </ion-slide>\\n            <ion-slide class=\\\"slide-container\\\">\\n                <div class=\\\"dayview-allday-table\\\">\\n                    <div class=\\\"dayview-allday-label\\\">{{allDayLabel}}</div>\\n                    <div class=\\\"dayview-allday-content-wrapper scroll-content\\\">\\n                        <table class=\\\"table table-bordered dayview-allday-content-table\\\">\\n                            <tbody>\\n                            <tr>\\n                                <td class=\\\"calendar-cell\\\" [ngClass]=\\\"{'calendar-event-wrap':views[2].allDayEvents.length>0}\\\"\\n                                    [ngStyle]=\\\"{height: 25*views[2].allDayEvents.length+'px'}\\\"\\n                                    *ngIf=\\\"2===currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[2].allDayEvents,eventTemplate:dayviewAllDayEventTemplate}\\\">\\n                                    </ng-template>\\n                                </td>\\n                                <td class=\\\"calendar-cell\\\" *ngIf=\\\"2!==currentViewIndex\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveAllDayEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{allDayEvents:views[2].allDayEvents}\\\">\\n                                    </ng-template>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                </div>\\n                <init-position-scroll *ngIf=\\\"2===currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\" [emitEvent]=\\\"preserveScrollPosition\\\"\\n                                      (onScroll)=\\\"setScrollPosition($event)\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[2].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\" tappable (click)=\\\"select(tm.time, tm.events)\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:dayviewNormalEventTemplate}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n                <init-position-scroll *ngIf=\\\"2!==currentViewIndex\\\" class=\\\"dayview-normal-event-container\\\"\\n                                      [initPosition]=\\\"initScrollPosition\\\">\\n                    <table class=\\\"table table-bordered table-fixed dayview-normal-event-table\\\">\\n                        <tbody>\\n                        <tr *ngFor=\\\"let tm of views[2].rows; let i = index\\\">\\n                            <td class=\\\"calendar-hour-column text-center\\\">\\n                                {{hourColumnLabels[i]}}\\n                            </td>\\n                            <td class=\\\"calendar-cell\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"dayviewInactiveNormalEventSectionTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                </init-position-scroll>\\n            </ion-slide>\\n        </ion-slides>\\n    \",\n            styles: [\"\\n        .table-fixed {\\n            table-layout: fixed;\\n        }\\n\\n        .table {\\n            width: 100%;\\n            max-width: 100%;\\n            background-color: transparent;\\n        }\\n\\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\\n        .table > tbody > tr > td, .table > tfoot > tr > td {\\n            padding: 8px;\\n            line-height: 20px;\\n            vertical-align: top;\\n        }\\n\\n        .table > thead > tr > th {\\n            vertical-align: bottom;\\n            border-bottom: 2px solid #ddd;\\n        }\\n\\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\\n            border-top: 0\\n        }\\n\\n        .table > tbody + tbody {\\n            border-top: 2px solid #ddd;\\n        }\\n\\n        .table-bordered {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\\n            border-bottom-width: 2px;\\n        }\\n\\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\\n            background-color: #f9f9f9\\n        }\\n\\n        .calendar-hour-column {\\n            width: 50px;\\n            white-space: nowrap;\\n        }\\n\\n        .calendar-event-wrap {\\n            position: relative;\\n            width: 100%;\\n            height: 100%;\\n        }\\n\\n        .calendar-event {\\n            position: absolute;\\n            padding: 2px;\\n            cursor: pointer;\\n            z-index: 10000;\\n        }\\n\\n        .slides-container {\\n            height: 100%;\\n        }\\n\\n        .slide-container {\\n            display: block;\\n        }\\n\\n        .calendar-cell {\\n            padding: 0 !important;\\n            height: 37px;\\n        }\\n\\n        .dayview-allday-label {\\n            float: left;\\n            height: 100%;\\n            line-height: 50px;\\n            text-align: center;\\n            width: 50px;\\n            border-left: 1px solid #ddd;\\n        }\\n\\n        [dir=\\\"rtl\\\"] .dayview-allday-label {\\n            border-right: 1px solid #ddd;\\n            float: right;\\n        }\\n\\n        .dayview-allday-content-wrapper {\\n            margin-left: 50px;\\n            overflow: hidden;\\n            height: 51px;\\n        }\\n\\n        [dir=\\\"rtl\\\"] .dayview-allday-content-wrapper {\\n            margin-left: 0;\\n            margin-right: 50px;\\n        }\\n\\n        .dayview-allday-content-table {\\n            min-height: 50px;\\n        }\\n\\n        .dayview-allday-content-table td {\\n            border-left: 1px solid #ddd;\\n            border-right: 1px solid #ddd;\\n        }\\n\\n        .dayview-allday-table {\\n            height: 50px;\\n            position: relative;\\n            border-bottom: 1px solid #ddd;\\n            font-size: 14px;\\n        }\\n\\n        .dayview-normal-event-container {\\n            margin-top: 50px;\\n            overflow: hidden;\\n            left: 0;\\n            right: 0;\\n            top: 0;\\n            bottom: 0;\\n            position: absolute;\\n            font-size: 14px;\\n        }\\n\\n        .scroll-content {\\n            overflow-y: auto;\\n            overflow-x: hidden;\\n        }\\n\\n        ::-webkit-scrollbar,\\n        *::-webkit-scrollbar {\\n            display: none;\\n        }\\n\\n        .table > tbody > tr > td.calendar-hour-column {\\n            padding-left: 0;\\n            padding-right: 0;\\n            vertical-align: middle;\\n        }\\n\\n        @media (max-width: 750px) {\\n            .dayview-allday-label, .calendar-hour-column {\\n                width: 31px;\\n                font-size: 12px;\\n            }\\n\\n            .dayview-allday-label {\\n                padding-top: 4px;\\n            }\\n\\n            .table > tbody > tr > td.calendar-hour-column {\\n                padding-left: 0;\\n                padding-right: 0;\\n                vertical-align: middle;\\n                line-height: 12px;\\n            }\\n\\n            .dayview-allday-label {\\n                line-height: 20px;\\n            }\\n\\n            .dayview-allday-content-wrapper {\\n                margin-left: 31px;\\n            }\\n\\n            [dir=\\\"rtl\\\"] .dayview-allday-content-wrapper {\\n                margin-left: 0;\\n                margin-right: 31px;\\n            }\\n        }\\n    \"],\n            encapsulation: ViewEncapsulation.None\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [CalendarService, ElementRef])\n    ], DayViewComponent);\n    return DayViewComponent;\n}());\nexport { DayViewComponent };\n","export { NgCalendarModule } from './calendar.module';\n","import * as tslib_1 from \"tslib\";\nimport { Component, Input, Output, EventEmitter, ElementRef, ViewEncapsulation } from '@angular/core';\nvar initPositionScrollComponent = /** @class */ (function () {\n    function initPositionScrollComponent(el) {\n        this.onScroll = new EventEmitter();\n        this.listenerAttached = false;\n        this.element = el;\n    }\n    initPositionScrollComponent.prototype.ngOnChanges = function (changes) {\n        var initPosition = changes['initPosition'];\n        if (initPosition && initPosition.currentValue !== undefined && this.scrollContent) {\n            var me_1 = this;\n            setTimeout(function () {\n                me_1.scrollContent.scrollTop = initPosition.currentValue;\n            }, 0);\n        }\n    };\n    initPositionScrollComponent.prototype.ngAfterViewInit = function () {\n        var scrollContent = this.scrollContent = this.element.nativeElement.querySelector('.scroll-content');\n        if (this.initPosition !== undefined) {\n            scrollContent.scrollTop = this.initPosition;\n        }\n        if (this.emitEvent && !this.listenerAttached) {\n            var onScroll_1 = this.onScroll;\n            this.handler = function () {\n                onScroll_1.emit(scrollContent.scrollTop);\n            };\n            this.listenerAttached = true;\n            scrollContent.addEventListener('scroll', this.handler);\n        }\n    };\n    initPositionScrollComponent.prototype.ngOnDestroy = function () {\n        if (this.listenerAttached) {\n            this.scrollContent.removeEventListener('scroll', this.handler);\n        }\n    };\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], initPositionScrollComponent.prototype, \"initPosition\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], initPositionScrollComponent.prototype, \"emitEvent\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], initPositionScrollComponent.prototype, \"onScroll\", void 0);\n    initPositionScrollComponent = tslib_1.__decorate([\n        Component({\n            selector: 'init-position-scroll',\n            template: \"\\n        <div class=\\\"scroll-content\\\" style=\\\"height:100%\\\">\\n            <ng-content></ng-content>\\n        </div>\\n    \",\n            styles: [\"\\n        .scroll-content {\\n            overflow-y: auto;\\n            overflow-x: hidden;\\n        }        \\n    \"],\n            encapsulation: ViewEncapsulation.None\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [ElementRef])\n    ], initPositionScrollComponent);\n    return initPositionScrollComponent;\n}());\nexport { initPositionScrollComponent };\n","import * as tslib_1 from \"tslib\";\nimport { Component, Input, Output, EventEmitter, ViewChild, TemplateRef } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { IonSlides } from '@ionic/angular';\nimport { CalendarService } from './calendar.service';\nvar MonthViewComponent = /** @class */ (function () {\n    function MonthViewComponent(calendarService) {\n        this.calendarService = calendarService;\n        this.autoSelect = true;\n        this.dir = '';\n        this.onRangeChanged = new EventEmitter();\n        this.onEventSelected = new EventEmitter();\n        this.onTimeSelected = new EventEmitter(true);\n        this.onTitleChanged = new EventEmitter(true);\n        this.views = [];\n        this.currentViewIndex = 0;\n        this.mode = 'month';\n        this.direction = 0;\n        this.moveOnSelected = false;\n        this.inited = false;\n        this.callbackOnInit = true;\n    }\n    MonthViewComponent_1 = MonthViewComponent;\n    ;\n    MonthViewComponent.getDates = function (startDate, n) {\n        var dates = new Array(n), current = new Date(startDate.getTime());\n        var i = 0;\n        while (i < n) {\n            dates[i++] = new Date(current.getTime());\n            current.setDate(current.getDate() + 1);\n        }\n        return dates;\n    };\n    MonthViewComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDay) {\n            this.formatDayLabel = this.dateFormatter.formatMonthViewDay;\n        }\n        else {\n            var dayLabelDatePipe_1 = new DatePipe('en-US');\n            this.formatDayLabel = function (date) {\n                return dayLabelDatePipe_1.transform(date, this.formatDay);\n            };\n        }\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewDayHeader) {\n            this.formatDayHeaderLabel = this.dateFormatter.formatMonthViewDayHeader;\n        }\n        else {\n            var datePipe_1 = new DatePipe(this.locale);\n            this.formatDayHeaderLabel = function (date) {\n                return datePipe_1.transform(date, this.formatDayHeader);\n            };\n        }\n        if (this.dateFormatter && this.dateFormatter.formatMonthViewTitle) {\n            this.formatTitle = this.dateFormatter.formatMonthViewTitle;\n        }\n        else {\n            var datePipe_2 = new DatePipe(this.locale);\n            this.formatTitle = function (date) {\n                return datePipe_2.transform(date, this.formatMonthTitle);\n            };\n        }\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n        this.refreshView();\n        this.inited = true;\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(function (currentDate) {\n            _this.refreshView();\n        });\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(function () {\n            _this.onDataLoaded();\n        });\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(function (direction) {\n            if (direction === 1) {\n                _this.slider.slideNext();\n            }\n            else if (direction === -1) {\n                _this.slider.slidePrev();\n            }\n        });\n    };\n    MonthViewComponent.prototype.ngOnDestroy = function () {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n    };\n    MonthViewComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.inited) {\n            return;\n        }\n        var eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n        var lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n        var lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    };\n    MonthViewComponent.prototype.ngAfterViewInit = function () {\n        var title = this.getTitle();\n        this.onTitleChanged.emit(title);\n    };\n    MonthViewComponent.prototype.onSlideChanged = function () {\n        var _this = this;\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n        var direction = 0;\n        var currentViewIndex = this.currentViewIndex;\n        this.slider.getActiveIndex().then(function (currentSlideIndex) {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if (isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            }\n            else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                _this.slider.slideTo(1, 0, false);\n            }\n            else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            }\n            else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                _this.slider.slideTo(3, 0, false);\n            }\n            _this.currentViewIndex = currentSlideIndex;\n            _this.move(direction);\n        });\n    };\n    MonthViewComponent.prototype.move = function (direction) {\n        if (direction === 0) {\n            return;\n        }\n        this.direction = direction;\n        if (!this.moveOnSelected) {\n            var adjacentDate = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n            this.calendarService.setCurrentDate(adjacentDate);\n        }\n        this.refreshView();\n        this.direction = 0;\n        this.moveOnSelected = false;\n    };\n    MonthViewComponent.prototype.createDateObject = function (date) {\n        var disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(date);\n        }\n        return {\n            date: date,\n            events: [],\n            label: this.formatDayLabel(date),\n            secondary: false,\n            disabled: disabled\n        };\n    };\n    MonthViewComponent.prototype.getViewData = function (startTime) {\n        var startDate = startTime, date = startDate.getDate(), month = (startDate.getMonth() + (date !== 1 ? 1 : 0)) % 12;\n        var dates = MonthViewComponent_1.getDates(startDate, 42);\n        var days = [];\n        for (var i = 0; i < 42; i++) {\n            var dateObject = this.createDateObject(dates[i]);\n            dateObject.secondary = dates[i].getMonth() !== month;\n            days[i] = dateObject;\n        }\n        var dayHeaders = [];\n        for (var i = 0; i < 7; i++) {\n            dayHeaders.push(this.formatDayHeaderLabel(days[i].date));\n        }\n        return {\n            dates: days,\n            dayHeaders: dayHeaders\n        };\n    };\n    MonthViewComponent.prototype.getHighlightClass = function (date) {\n        var className = '';\n        if (date.hasEvent) {\n            if (date.secondary) {\n                className = 'monthview-secondary-with-event';\n            }\n            else {\n                className = 'monthview-primary-with-event';\n            }\n        }\n        if (date.selected) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-selected';\n        }\n        if (date.current) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-current';\n        }\n        if (date.secondary) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'text-muted';\n        }\n        if (date.disabled) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'monthview-disabled';\n        }\n        return className;\n    };\n    MonthViewComponent.prototype.getRange = function (currentDate) {\n        var year = currentDate.getFullYear(), month = currentDate.getMonth(), firstDayOfMonth = new Date(year, month, 1, 12, 0, 0), // set hour to 12 to avoid DST problem\n        difference = this.startingDayMonth - firstDayOfMonth.getDay(), numDisplayedFromPreviousMonth = (difference > 0) ? 7 - difference : -difference, startDate = new Date(firstDayOfMonth.getTime());\n        if (numDisplayedFromPreviousMonth > 0) {\n            startDate.setDate(-numDisplayedFromPreviousMonth + 1);\n        }\n        var endDate = new Date(startDate.getTime());\n        endDate.setDate(endDate.getDate() + 42);\n        return {\n            startTime: startDate,\n            endTime: endDate\n        };\n    };\n    MonthViewComponent.prototype.onDataLoaded = function () {\n        var range = this.range, eventSource = this.eventSource, len = eventSource ? eventSource.length : 0, startTime = range.startTime, endTime = range.endTime, utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()), utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()), currentViewIndex = this.currentViewIndex, dates = this.views[currentViewIndex].dates, oneDay = 86400000, eps = 0.0006;\n        for (var r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].hasEvent = false;\n                dates[r].events = [];\n            }\n        }\n        for (var i = 0; i < len; i += 1) {\n            var event_1 = eventSource[i], eventStartTime = event_1.startTime, eventEndTime = event_1.endTime;\n            var eventUTCStartTime = void 0, eventUTCEndTime = void 0;\n            if (event_1.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            }\n            else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime) {\n                continue;\n            }\n            var timeDifferenceStart = void 0, timeDifferenceEnd = void 0;\n            if (eventUTCStartTime < utcStartTime) {\n                timeDifferenceStart = 0;\n            }\n            else {\n                timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneDay;\n            }\n            if (eventUTCEndTime > utcEndTime) {\n                timeDifferenceEnd = (utcEndTime - utcStartTime) / oneDay;\n            }\n            else {\n                timeDifferenceEnd = (eventUTCEndTime - utcStartTime) / oneDay;\n            }\n            var index = Math.floor(timeDifferenceStart);\n            var endIndex = Math.ceil(timeDifferenceEnd - eps);\n            while (index < endIndex) {\n                dates[index].hasEvent = true;\n                var eventSet = dates[index].events;\n                if (eventSet) {\n                    eventSet.push(event_1);\n                }\n                else {\n                    eventSet = [];\n                    eventSet.push(event_1);\n                    dates[index].events = eventSet;\n                }\n                index += 1;\n            }\n        }\n        for (var r = 0; r < 42; r += 1) {\n            if (dates[r].hasEvent) {\n                dates[r].events.sort(this.compareEvent);\n            }\n        }\n        if (this.autoSelect) {\n            var findSelected = false;\n            for (var r = 0; r < 42; r += 1) {\n                if (dates[r].selected) {\n                    this.selectedDate = dates[r];\n                    findSelected = true;\n                    break;\n                }\n            }\n            if (findSelected) {\n                this.onTimeSelected.emit({\n                    selectedTime: this.selectedDate.date,\n                    events: this.selectedDate.events,\n                    disabled: this.selectedDate.disabled\n                });\n            }\n        }\n    };\n    MonthViewComponent.prototype.refreshView = function () {\n        this.range = this.getRange(this.calendarService.currentDate);\n        if (this.inited) {\n            var title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n        this.calendarService.populateAdjacentViews(this);\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\n        this.calendarService.rangeChanged(this);\n    };\n    MonthViewComponent.prototype.getTitle = function () {\n        var currentViewStartDate = this.range.startTime, date = currentViewStartDate.getDate(), month = (currentViewStartDate.getMonth() + (date !== 1 ? 1 : 0)) % 12, year = currentViewStartDate.getFullYear() + (date !== 1 && month === 0 ? 1 : 0), headerDate = new Date(year, month, 1, 12, 0, 0, 0);\n        return this.formatTitle(headerDate);\n    };\n    MonthViewComponent.prototype.compareEvent = function (event1, event2) {\n        if (event1.allDay) {\n            return 1;\n        }\n        else if (event2.allDay) {\n            return -1;\n        }\n        else {\n            return (event1.startTime.getTime() - event2.startTime.getTime());\n        }\n    };\n    MonthViewComponent.prototype.select = function (viewDate) {\n        if (!this.views) {\n            return;\n        }\n        var selectedDate = viewDate.date, events = viewDate.events;\n        if (!viewDate.disabled) {\n            var dates = this.views[this.currentViewIndex].dates, currentCalendarDate = this.calendarService.currentDate, currentMonth = currentCalendarDate.getMonth(), currentYear = currentCalendarDate.getFullYear(), selectedMonth = selectedDate.getMonth(), selectedYear = selectedDate.getFullYear();\n            var direction = 0;\n            if (currentYear === selectedYear) {\n                if (currentMonth !== selectedMonth) {\n                    direction = currentMonth < selectedMonth ? 1 : -1;\n                }\n            }\n            else {\n                direction = currentYear < selectedYear ? 1 : -1;\n            }\n            this.calendarService.setCurrentDate(selectedDate);\n            if (direction === 0) {\n                var currentViewStartDate = this.range.startTime, oneDay = 86400000, selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n                for (var r = 0; r < 42; r += 1) {\n                    dates[r].selected = false;\n                }\n                if (selectedDayDifference >= 0 && selectedDayDifference < 42) {\n                    dates[selectedDayDifference].selected = true;\n                    this.selectedDate = dates[selectedDayDifference];\n                }\n            }\n            else {\n                this.moveOnSelected = true;\n                this.slideView(direction);\n            }\n        }\n        this.onTimeSelected.emit({ selectedTime: selectedDate, events: events, disabled: viewDate.disabled });\n    };\n    MonthViewComponent.prototype.slideView = function (direction) {\n        if (direction === 1) {\n            this.slider.slideNext();\n        }\n        else if (direction === -1) {\n            this.slider.slidePrev();\n        }\n    };\n    MonthViewComponent.prototype.updateCurrentView = function (currentViewStartDate, view) {\n        var currentCalendarDate = this.calendarService.currentDate, today = new Date(), oneDay = 86400000, selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay), currentDayDifference = Math.round((Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n        for (var r = 0; r < 42; r += 1) {\n            view.dates[r].selected = false;\n        }\n        if (selectedDayDifference >= 0 && selectedDayDifference < 42 && !view.dates[selectedDayDifference].disabled && (this.autoSelect || this.moveOnSelected)) {\n            view.dates[selectedDayDifference].selected = true;\n            this.selectedDate = view.dates[selectedDayDifference];\n        }\n        else {\n            this.selectedDate = {\n                date: null,\n                events: [],\n                label: null,\n                secondary: null,\n                disabled: false\n            };\n        }\n        if (currentDayDifference >= 0 && currentDayDifference < 42) {\n            view.dates[currentDayDifference].current = true;\n        }\n    };\n    MonthViewComponent.prototype.eventSelected = function (event) {\n        this.onEventSelected.emit(event);\n    };\n    var MonthViewComponent_1;\n    tslib_1.__decorate([\n        ViewChild('monthSlider'),\n        tslib_1.__metadata(\"design:type\", IonSlides)\n    ], MonthViewComponent.prototype, \"slider\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], MonthViewComponent.prototype, \"monthviewDisplayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], MonthViewComponent.prototype, \"monthviewInactiveDisplayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], MonthViewComponent.prototype, \"monthviewEventDetailTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], MonthViewComponent.prototype, \"formatDay\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], MonthViewComponent.prototype, \"formatDayHeader\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], MonthViewComponent.prototype, \"formatMonthTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], MonthViewComponent.prototype, \"eventSource\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], MonthViewComponent.prototype, \"startingDayMonth\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], MonthViewComponent.prototype, \"showEventDetail\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], MonthViewComponent.prototype, \"noEventsLabel\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"autoSelect\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Function)\n    ], MonthViewComponent.prototype, \"markDisabled\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], MonthViewComponent.prototype, \"locale\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"dateFormatter\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"dir\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], MonthViewComponent.prototype, \"lockSwipeToPrev\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], MonthViewComponent.prototype, \"lockSwipes\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"sliderOptions\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"onRangeChanged\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"onEventSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"onTimeSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], MonthViewComponent.prototype, \"onTitleChanged\", void 0);\n    MonthViewComponent = MonthViewComponent_1 = tslib_1.__decorate([\n        Component({\n            selector: 'monthview',\n            template: \"\\n        <div>\\n            <ion-slides #monthSlider [options]=\\\"sliderOptions\\\" [dir]=\\\"dir\\\" (ionSlideDidChange)=\\\"onSlideChanged()\\\">\\n                <ion-slide>\\n                    <table *ngIf=\\\"0===currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr>\\n                            <th *ngFor=\\\"let dayHeader of views[0].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\" tappable (click)=\\\"select(views[0].dates[row*7+col])\\\"\\n                                [ngClass]=\\\"getHighlightClass(views[0].dates[row*7+col])\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[0], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                    <table *ngIf=\\\"0!==currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr class=\\\"text-center\\\">\\n                            <th *ngFor=\\\"let dayHeader of views[0].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewInactiveDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[0], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        <tr>\\n                        </tbody>\\n                    </table>\\n                </ion-slide>\\n                <ion-slide>\\n                    <table *ngIf=\\\"1===currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr>\\n                            <th *ngFor=\\\"let dayHeader of views[1].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\" tappable (click)=\\\"select(views[1].dates[row*7+col])\\\"\\n                                [ngClass]=\\\"getHighlightClass(views[1].dates[row*7+col])\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[1], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                    <table *ngIf=\\\"1!==currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr class=\\\"text-center\\\">\\n                            <th *ngFor=\\\"let dayHeader of views[1].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewInactiveDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[1], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        <tr>\\n                        </tbody>\\n                    </table>\\n                </ion-slide>\\n                <ion-slide>\\n                    <table *ngIf=\\\"2===currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr>\\n                            <th *ngFor=\\\"let dayHeader of views[2].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\" tappable (click)=\\\"select(views[2].dates[row*7+col])\\\"\\n                                [ngClass]=\\\"getHighlightClass(views[2].dates[row*7+col])\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[2], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        </tr>\\n                        </tbody>\\n                    </table>\\n                    <table *ngIf=\\\"2!==currentViewIndex\\\" class=\\\"table table-bordered table-fixed monthview-datetable\\\">\\n                        <thead>\\n                        <tr class=\\\"text-center\\\">\\n                            <th *ngFor=\\\"let dayHeader of views[2].dayHeaders\\\">\\n                                <small>{{dayHeader}}</small>\\n                            </th>\\n                        </tr>\\n                        </thead>\\n                        <tbody>\\n                        <tr *ngFor=\\\"let row of [0,1,2,3,4,5]\\\">\\n                            <td *ngFor=\\\"let col of [0,1,2,3,4,5,6]\\\">\\n                                <ng-template [ngTemplateOutlet]=\\\"monthviewInactiveDisplayEventTemplate\\\"\\n                                             [ngTemplateOutletContext]=\\\"{view: views[2], row: row, col: col}\\\">\\n                                </ng-template>\\n                            </td>\\n                        <tr>\\n                        </tbody>\\n                    </table>\\n                </ion-slide>\\n            </ion-slides>\\n            <ng-template [ngTemplateOutlet]=\\\"monthviewEventDetailTemplate\\\"\\n                         [ngTemplateOutletContext]=\\\"{showEventDetail:showEventDetail, selectedDate: selectedDate, noEventsLabel: noEventsLabel}\\\">\\n            </ng-template>\\n        </div>\\n    \",\n            styles: [\"\\n        .text-muted {\\n            color: #999;\\n        }\\n\\n        .table-fixed {\\n            table-layout: fixed;\\n        }\\n\\n        .table {\\n            width: 100%;\\n            max-width: 100%;\\n            background-color: transparent;\\n        }\\n\\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\\n        .table > tbody > tr > td, .table > tfoot > tr > td {\\n            padding: 8px;\\n            line-height: 20px;\\n            vertical-align: top;\\n        }\\n\\n        .table > thead > tr > th {\\n            vertical-align: bottom;\\n            border-bottom: 2px solid #ddd;\\n        }\\n\\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\\n            border-top: 0\\n        }\\n\\n        .table > tbody + tbody {\\n            border-top: 2px solid #ddd;\\n        }\\n\\n        .table-bordered {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\\n            border-bottom-width: 2px;\\n        }\\n\\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\\n            background-color: #f9f9f9\\n        }\\n\\n        .monthview-primary-with-event {\\n            background-color: #3a87ad;\\n            color: white;\\n        }\\n\\n        .monthview-current {\\n            background-color: #f0f0f0;\\n        }\\n\\n        .monthview-selected {\\n            background-color: #009900;\\n            color: white;\\n        }\\n\\n        .monthview-datetable td.monthview-disabled {\\n            color: lightgrey;\\n            cursor: default;\\n        }\\n\\n        .monthview-datetable th {\\n            text-align: center;\\n        }\\n\\n        .monthview-datetable td {\\n            cursor: pointer;\\n            text-align: center;\\n        }\\n\\n        .monthview-secondary-with-event {\\n            background-color: #d9edf7;\\n        }\\n\\n        ::-webkit-scrollbar,\\n        *::-webkit-scrollbar {\\n            display: none;\\n        }\\n    \"]\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [CalendarService])\n    ], MonthViewComponent);\n    return MonthViewComponent;\n}());\nexport { MonthViewComponent };\n","import * as tslib_1 from \"tslib\";\nimport { DatePipe } from '@angular/common';\nimport { IonSlides } from '@ionic/angular';\nimport { Component, HostBinding, Input, Output, EventEmitter, ViewChild, ViewEncapsulation, TemplateRef, ElementRef } from '@angular/core';\nimport { CalendarService } from './calendar.service';\nvar WeekViewComponent = /** @class */ (function () {\n    function WeekViewComponent(calendarService, elm) {\n        this.calendarService = calendarService;\n        this.elm = elm;\n        this.class = true;\n        this.autoSelect = true;\n        this.dir = '';\n        this.scrollToHour = 0;\n        this.onRangeChanged = new EventEmitter();\n        this.onEventSelected = new EventEmitter();\n        this.onTimeSelected = new EventEmitter();\n        this.onTitleChanged = new EventEmitter(true);\n        this.views = [];\n        this.currentViewIndex = 0;\n        this.direction = 0;\n        this.mode = 'week';\n        this.inited = false;\n        this.callbackOnInit = true;\n    }\n    WeekViewComponent_1 = WeekViewComponent;\n    WeekViewComponent.createDateObjects = function (startTime, startHour, endHour, timeInterval) {\n        var times = [], currentHour = 0, currentDate = startTime.getDate();\n        var hourStep, minStep;\n        if (timeInterval < 1) {\n            hourStep = Math.floor(1 / timeInterval);\n            minStep = 60;\n        }\n        else {\n            hourStep = 1;\n            minStep = Math.floor(60 / timeInterval);\n        }\n        for (var hour = startHour; hour < endHour; hour += hourStep) {\n            for (var interval = 0; interval < 60; interval += minStep) {\n                var row = [];\n                for (var day = 0; day < 7; day += 1) {\n                    var time = new Date(startTime.getTime());\n                    time.setHours(currentHour + hour, interval);\n                    time.setDate(currentDate + day);\n                    row.push({\n                        events: [],\n                        time: time\n                    });\n                }\n                times.push(row);\n            }\n        }\n        return times;\n    };\n    WeekViewComponent.getDates = function (startTime, n) {\n        var dates = new Array(n), current = new Date(startTime.getTime());\n        var i = 0;\n        while (i < n) {\n            dates[i++] = {\n                date: new Date(current.getTime()),\n                events: [],\n                dayHeader: ''\n            };\n            current.setDate(current.getDate() + 1);\n        }\n        return dates;\n    };\n    WeekViewComponent.compareEventByStartOffset = function (eventA, eventB) {\n        return eventA.startOffset - eventB.startOffset;\n    };\n    WeekViewComponent.calculateWidth = function (orderedEvents, size, hourParts) {\n        var totalSize = size * hourParts, cells = new Array(totalSize);\n        // sort by position in descending order, the right most columns should be calculated first\n        orderedEvents.sort(function (eventA, eventB) {\n            return eventB.position - eventA.position;\n        });\n        for (var i_1 = 0; i_1 < totalSize; i_1 += 1) {\n            cells[i_1] = {\n                calculated: false,\n                events: []\n            };\n        }\n        var len = orderedEvents.length;\n        for (var i_2 = 0; i_2 < len; i_2 += 1) {\n            var event_1 = orderedEvents[i_2];\n            var index = event_1.startIndex * hourParts + event_1.startOffset;\n            while (index < event_1.endIndex * hourParts - event_1.endOffset) {\n                cells[index].events.push(event_1);\n                index += 1;\n            }\n        }\n        var i = 0;\n        while (i < len) {\n            var event_2 = orderedEvents[i];\n            if (!event_2.overlapNumber) {\n                var overlapNumber = event_2.position + 1;\n                event_2.overlapNumber = overlapNumber;\n                var eventQueue = [event_2];\n                while (event_2 = eventQueue.shift()) {\n                    var index = event_2.startIndex * hourParts + event_2.startOffset;\n                    while (index < event_2.endIndex * hourParts - event_2.endOffset) {\n                        if (!cells[index].calculated) {\n                            cells[index].calculated = true;\n                            if (cells[index].events) {\n                                var eventCountInCell = cells[index].events.length;\n                                for (var j = 0; j < eventCountInCell; j += 1) {\n                                    var currentEventInCell = cells[index].events[j];\n                                    if (!currentEventInCell.overlapNumber) {\n                                        currentEventInCell.overlapNumber = overlapNumber;\n                                        eventQueue.push(currentEventInCell);\n                                    }\n                                }\n                            }\n                        }\n                        index += 1;\n                    }\n                }\n            }\n            i += 1;\n        }\n    };\n    WeekViewComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (!this.sliderOptions) {\n            this.sliderOptions = {};\n        }\n        this.sliderOptions.loop = true;\n        this.hourRange = (this.endHour - this.startHour) * this.hourSegments;\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewDayHeader) {\n            this.formatDayHeader = this.dateFormatter.formatWeekViewDayHeader;\n        }\n        else {\n            var datePipe_1 = new DatePipe(this.locale);\n            this.formatDayHeader = function (date) {\n                return datePipe_1.transform(date, this.formatWeekViewDayHeader);\n            };\n        }\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewTitle) {\n            this.formatTitle = this.dateFormatter.formatWeekViewTitle;\n        }\n        else {\n            var datePipe_2 = new DatePipe(this.locale);\n            this.formatTitle = function (date) {\n                return datePipe_2.transform(date, this.formatWeekTitle);\n            };\n        }\n        if (this.dateFormatter && this.dateFormatter.formatWeekViewHourColumn) {\n            this.formatHourColumnLabel = this.dateFormatter.formatWeekViewHourColumn;\n        }\n        else {\n            var datePipe_3 = new DatePipe(this.locale);\n            this.formatHourColumnLabel = function (date) {\n                return datePipe_3.transform(date, this.formatHourColumn);\n            };\n        }\n        if (this.lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(true);\n        }\n        if (this.lockSwipes) {\n            this.slider.lockSwipes(true);\n        }\n        this.refreshView();\n        this.hourColumnLabels = this.getHourColumnLabels();\n        this.inited = true;\n        this.currentDateChangedFromParentSubscription = this.calendarService.currentDateChangedFromParent$.subscribe(function (currentDate) {\n            _this.refreshView();\n        });\n        this.eventSourceChangedSubscription = this.calendarService.eventSourceChanged$.subscribe(function () {\n            _this.onDataLoaded();\n        });\n        this.slideChangedSubscription = this.calendarService.slideChanged$.subscribe(function (direction) {\n            if (direction === 1) {\n                _this.slider.slideNext();\n            }\n            else if (direction === -1) {\n                _this.slider.slidePrev();\n            }\n        });\n    };\n    WeekViewComponent.prototype.ngAfterViewInit = function () {\n        var title = this.getTitle();\n        this.onTitleChanged.emit(title);\n        if (this.scrollToHour > 0) {\n            var hourColumns_1 = this.elm.nativeElement.querySelector('.weekview-normal-event-container').querySelectorAll('.calendar-hour-column');\n            var me_1 = this;\n            setTimeout(function () {\n                me_1.initScrollPosition = hourColumns_1[me_1.scrollToHour - me_1.startHour].offsetTop;\n            }, 50);\n        }\n    };\n    WeekViewComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.inited) {\n            return;\n        }\n        var eventSourceChange = changes.eventSource;\n        if (eventSourceChange && eventSourceChange.currentValue) {\n            this.onDataLoaded();\n        }\n        var lockSwipeToPrev = changes.lockSwipeToPrev;\n        if (lockSwipeToPrev) {\n            this.slider.lockSwipeToPrev(lockSwipeToPrev.currentValue);\n        }\n        var lockSwipes = changes.lockSwipes;\n        if (lockSwipes) {\n            this.slider.lockSwipes(lockSwipes.currentValue);\n        }\n    };\n    WeekViewComponent.prototype.ngOnDestroy = function () {\n        if (this.currentDateChangedFromParentSubscription) {\n            this.currentDateChangedFromParentSubscription.unsubscribe();\n            this.currentDateChangedFromParentSubscription = null;\n        }\n        if (this.eventSourceChangedSubscription) {\n            this.eventSourceChangedSubscription.unsubscribe();\n            this.eventSourceChangedSubscription = null;\n        }\n        if (this.slideChangedSubscription) {\n            this.slideChangedSubscription.unsubscribe();\n            this.slideChangedSubscription = null;\n        }\n    };\n    WeekViewComponent.prototype.onSlideChanged = function () {\n        var _this = this;\n        if (this.callbackOnInit) {\n            this.callbackOnInit = false;\n            return;\n        }\n        var currentViewIndex = this.currentViewIndex;\n        var direction = 0;\n        this.slider.getActiveIndex().then(function (currentSlideIndex) {\n            currentSlideIndex = (currentSlideIndex + 2) % 3;\n            if (isNaN(currentSlideIndex)) {\n                currentSlideIndex = currentViewIndex;\n            }\n            if (currentSlideIndex - currentViewIndex === 1) {\n                direction = 1;\n            }\n            else if (currentSlideIndex === 0 && currentViewIndex === 2) {\n                direction = 1;\n                _this.slider.slideTo(1, 0, false);\n            }\n            else if (currentViewIndex - currentSlideIndex === 1) {\n                direction = -1;\n            }\n            else if (currentSlideIndex === 2 && currentViewIndex === 0) {\n                direction = -1;\n                _this.slider.slideTo(3, 0, false);\n            }\n            _this.currentViewIndex = currentSlideIndex;\n            _this.move(direction);\n        });\n    };\n    WeekViewComponent.prototype.move = function (direction) {\n        if (direction === 0) {\n            return;\n        }\n        this.direction = direction;\n        var adjacent = this.calendarService.getAdjacentCalendarDate(this.mode, direction);\n        this.calendarService.setCurrentDate(adjacent);\n        this.refreshView();\n        this.direction = 0;\n    };\n    WeekViewComponent.prototype.getHourColumnLabels = function () {\n        var hourColumnLabels = [];\n        for (var hour = 0, length_1 = this.views[0].rows.length; hour < length_1; hour += 1) {\n            // handle edge case for DST\n            if (hour === 0 && this.views[0].rows[hour][0].time.getHours() !== this.startHour) {\n                var time = new Date(this.views[0].rows[hour][0].time);\n                time.setDate(time.getDate() + 1);\n                time.setHours(this.startHour);\n                hourColumnLabels.push(this.formatHourColumnLabel(time));\n            }\n            else {\n                hourColumnLabels.push(this.formatHourColumnLabel(this.views[0].rows[hour][0].time));\n            }\n        }\n        return hourColumnLabels;\n    };\n    WeekViewComponent.prototype.getViewData = function (startTime) {\n        var dates = WeekViewComponent_1.getDates(startTime, 7);\n        for (var i = 0; i < 7; i++) {\n            dates[i].dayHeader = this.formatDayHeader(dates[i].date);\n        }\n        return {\n            rows: WeekViewComponent_1.createDateObjects(startTime, this.startHour, this.endHour, this.hourSegments),\n            dates: dates\n        };\n    };\n    WeekViewComponent.prototype.getRange = function (currentDate) {\n        var year = currentDate.getFullYear(), month = currentDate.getMonth(), date = currentDate.getDate(), day = currentDate.getDay();\n        var difference = day - this.startingDayWeek;\n        if (difference < 0) {\n            difference += 7;\n        }\n        // set hour to 12 to avoid DST problem\n        var firstDayOfWeek = new Date(year, month, date - difference, 12, 0, 0), endTime = new Date(year, month, date - difference + 7, 12, 0, 0);\n        return {\n            startTime: firstDayOfWeek,\n            endTime: endTime\n        };\n    };\n    WeekViewComponent.prototype.onDataLoaded = function () {\n        var eventSource = this.eventSource, len = eventSource ? eventSource.length : 0, startTime = this.range.startTime, endTime = this.range.endTime, utcStartTime = Date.UTC(startTime.getFullYear(), startTime.getMonth(), startTime.getDate()), utcEndTime = Date.UTC(endTime.getFullYear(), endTime.getMonth(), endTime.getDate()), currentViewIndex = this.currentViewIndex, rows = this.views[currentViewIndex].rows, dates = this.views[currentViewIndex].dates, oneHour = 3600000, oneDay = 86400000, \n        // add allday eps\n        eps = 0.016, rangeStartRowIndex = this.startHour * this.hourSegments, rangeEndRowIndex = this.endHour * this.hourSegments, allRows = 24 * this.hourSegments;\n        var allDayEventInRange = false, normalEventInRange = false;\n        for (var i = 0; i < 7; i += 1) {\n            dates[i].events = [];\n            dates[i].hasEvent = false;\n        }\n        for (var day = 0; day < 7; day += 1) {\n            for (var hour = 0; hour < this.hourRange; hour += 1) {\n                rows[hour][day].events = [];\n            }\n        }\n        for (var i = 0; i < len; i += 1) {\n            var event_3 = eventSource[i];\n            var eventStartTime = event_3.startTime;\n            var eventEndTime = event_3.endTime;\n            var eventUTCStartTime = void 0, eventUTCEndTime = void 0;\n            if (event_3.allDay) {\n                eventUTCStartTime = eventStartTime.getTime();\n                eventUTCEndTime = eventEndTime.getTime();\n            }\n            else {\n                eventUTCStartTime = Date.UTC(eventStartTime.getFullYear(), eventStartTime.getMonth(), eventStartTime.getDate());\n                eventUTCEndTime = Date.UTC(eventEndTime.getFullYear(), eventEndTime.getMonth(), eventEndTime.getDate() + 1);\n            }\n            if (eventUTCEndTime <= utcStartTime || eventUTCStartTime >= utcEndTime || eventStartTime >= eventEndTime) {\n                continue;\n            }\n            if (event_3.allDay) {\n                allDayEventInRange = true;\n                var allDayStartIndex = void 0;\n                if (eventUTCStartTime <= utcStartTime) {\n                    allDayStartIndex = 0;\n                }\n                else {\n                    allDayStartIndex = Math.round((eventUTCStartTime - utcStartTime) / oneDay);\n                }\n                var allDayEndIndex = void 0;\n                if (eventUTCEndTime >= utcEndTime) {\n                    allDayEndIndex = Math.round((utcEndTime - utcStartTime) / oneDay);\n                }\n                else {\n                    allDayEndIndex = Math.round((eventUTCEndTime - utcStartTime) / oneDay);\n                }\n                var displayAllDayEvent = {\n                    event: event_3,\n                    startIndex: allDayStartIndex,\n                    endIndex: allDayEndIndex\n                };\n                var eventSet = dates[allDayStartIndex].events;\n                if (eventSet) {\n                    eventSet.push(displayAllDayEvent);\n                }\n                else {\n                    eventSet = [];\n                    eventSet.push(displayAllDayEvent);\n                    dates[allDayStartIndex].events = eventSet;\n                }\n                dates[allDayStartIndex].hasEvent = true;\n            }\n            else {\n                normalEventInRange = true;\n                var timeDifferenceStart = void 0;\n                if (eventUTCStartTime < utcStartTime) {\n                    timeDifferenceStart = 0;\n                }\n                else {\n                    timeDifferenceStart = (eventUTCStartTime - utcStartTime) / oneHour * this.hourSegments + (eventStartTime.getHours() + eventStartTime.getMinutes() / 60) * this.hourSegments;\n                }\n                var timeDifferenceEnd = void 0;\n                if (eventUTCEndTime > utcEndTime) {\n                    timeDifferenceEnd = (utcEndTime - utcStartTime) / oneHour * this.hourSegments;\n                }\n                else {\n                    timeDifferenceEnd = (eventUTCEndTime - oneDay - utcStartTime) / oneHour * this.hourSegments + (eventEndTime.getHours() + eventEndTime.getMinutes() / 60) * this.hourSegments;\n                }\n                var startIndex = Math.floor(timeDifferenceStart), endIndex = Math.ceil(timeDifferenceEnd - eps);\n                var startRowIndex = startIndex % allRows, dayIndex = Math.floor(startIndex / allRows), endOfDay = dayIndex * allRows, startOffset = 0, endOffset = 0;\n                if (this.hourParts !== 1) {\n                    if (startRowIndex < rangeStartRowIndex) {\n                        startOffset = 0;\n                    }\n                    else {\n                        startOffset = Math.floor((timeDifferenceStart - startIndex) * this.hourParts);\n                    }\n                }\n                do {\n                    endOfDay += allRows;\n                    var endRowIndex = void 0;\n                    if (endOfDay < endIndex) {\n                        endRowIndex = allRows;\n                    }\n                    else {\n                        if (endOfDay === endIndex) {\n                            endRowIndex = allRows;\n                        }\n                        else {\n                            endRowIndex = endIndex % allRows;\n                        }\n                        if (this.hourParts !== 1) {\n                            if (endRowIndex > rangeEndRowIndex) {\n                                endOffset = 0;\n                            }\n                            else {\n                                endOffset = Math.floor((endIndex - timeDifferenceEnd) * this.hourParts);\n                            }\n                        }\n                    }\n                    if (startRowIndex < rangeStartRowIndex) {\n                        startRowIndex = 0;\n                    }\n                    else {\n                        startRowIndex -= rangeStartRowIndex;\n                    }\n                    if (endRowIndex > rangeEndRowIndex) {\n                        endRowIndex = rangeEndRowIndex;\n                    }\n                    endRowIndex -= rangeStartRowIndex;\n                    if (startRowIndex < endRowIndex) {\n                        var displayEvent = {\n                            event: event_3,\n                            startIndex: startRowIndex,\n                            endIndex: endRowIndex,\n                            startOffset: startOffset,\n                            endOffset: endOffset\n                        };\n                        var eventSet = rows[startRowIndex][dayIndex].events;\n                        if (eventSet) {\n                            eventSet.push(displayEvent);\n                        }\n                        else {\n                            eventSet = [];\n                            eventSet.push(displayEvent);\n                            rows[startRowIndex][dayIndex].events = eventSet;\n                        }\n                        dates[dayIndex].hasEvent = true;\n                    }\n                    startRowIndex = 0;\n                    startOffset = 0;\n                    dayIndex += 1;\n                } while (endOfDay < endIndex);\n            }\n        }\n        if (normalEventInRange) {\n            for (var day = 0; day < 7; day += 1) {\n                var orderedEvents = [];\n                for (var hour = 0; hour < this.hourRange; hour += 1) {\n                    if (rows[hour][day].events) {\n                        rows[hour][day].events.sort(WeekViewComponent_1.compareEventByStartOffset);\n                        orderedEvents = orderedEvents.concat(rows[hour][day].events);\n                    }\n                }\n                if (orderedEvents.length > 0) {\n                    this.placeEvents(orderedEvents);\n                }\n            }\n        }\n        if (allDayEventInRange) {\n            var orderedAllDayEvents = [];\n            for (var day = 0; day < 7; day += 1) {\n                if (dates[day].events) {\n                    orderedAllDayEvents = orderedAllDayEvents.concat(dates[day].events);\n                }\n            }\n            if (orderedAllDayEvents.length > 0) {\n                this.placeAllDayEvents(orderedAllDayEvents);\n            }\n        }\n        if (this.autoSelect) {\n            var findSelected = false;\n            var selectedDate = void 0;\n            for (var r = 0; r < 7; r += 1) {\n                if (dates[r].selected) {\n                    selectedDate = dates[r];\n                    findSelected = true;\n                    break;\n                }\n            }\n            if (findSelected) {\n                var disabled = false;\n                if (this.markDisabled) {\n                    disabled = this.markDisabled(selectedDate.date);\n                }\n                this.onTimeSelected.emit({\n                    selectedTime: selectedDate.date,\n                    events: selectedDate.events.map(function (e) { return e.event; }),\n                    disabled: disabled\n                });\n            }\n        }\n    };\n    WeekViewComponent.prototype.refreshView = function () {\n        this.range = this.getRange(this.calendarService.currentDate);\n        if (this.inited) {\n            var title = this.getTitle();\n            this.onTitleChanged.emit(title);\n        }\n        this.calendarService.populateAdjacentViews(this);\n        this.updateCurrentView(this.range.startTime, this.views[this.currentViewIndex]);\n        this.calendarService.rangeChanged(this);\n    };\n    WeekViewComponent.prototype.getTitle = function () {\n        var firstDayOfWeek = new Date(this.range.startTime.getTime());\n        firstDayOfWeek.setHours(12, 0, 0, 0);\n        return this.formatTitle(firstDayOfWeek);\n    };\n    WeekViewComponent.prototype.getHighlightClass = function (date) {\n        var className = '';\n        if (date.hasEvent) {\n            if (className) {\n                className += ' ';\n            }\n            className = 'weekview-with-event';\n        }\n        if (date.selected) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'weekview-selected';\n        }\n        if (date.current) {\n            if (className) {\n                className += ' ';\n            }\n            className += 'weekview-current';\n        }\n        return className;\n    };\n    WeekViewComponent.prototype.select = function (selectedTime, events) {\n        var disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedTime);\n        }\n        this.onTimeSelected.emit({\n            selectedTime: selectedTime,\n            events: events.map(function (e) { return e.event; }),\n            disabled: disabled\n        });\n    };\n    WeekViewComponent.prototype.placeEvents = function (orderedEvents) {\n        this.calculatePosition(orderedEvents);\n        WeekViewComponent_1.calculateWidth(orderedEvents, this.hourRange, this.hourParts);\n    };\n    WeekViewComponent.prototype.placeAllDayEvents = function (orderedEvents) {\n        this.calculatePosition(orderedEvents);\n    };\n    WeekViewComponent.prototype.overlap = function (event1, event2) {\n        var earlyEvent = event1, lateEvent = event2;\n        if (event1.startIndex > event2.startIndex || (event1.startIndex === event2.startIndex && event1.startOffset > event2.startOffset)) {\n            earlyEvent = event2;\n            lateEvent = event1;\n        }\n        if (earlyEvent.endIndex <= lateEvent.startIndex) {\n            return false;\n        }\n        else {\n            return !(earlyEvent.endIndex - lateEvent.startIndex === 1 && earlyEvent.endOffset + lateEvent.startOffset >= this.hourParts);\n        }\n    };\n    WeekViewComponent.prototype.calculatePosition = function (events) {\n        var len = events.length, isForbidden = new Array(len);\n        var maxColumn = 0;\n        for (var i = 0; i < len; i += 1) {\n            var col = void 0;\n            for (col = 0; col < maxColumn; col += 1) {\n                isForbidden[col] = false;\n            }\n            for (var j = 0; j < i; j += 1) {\n                if (this.overlap(events[i], events[j])) {\n                    isForbidden[events[j].position] = true;\n                }\n            }\n            for (col = 0; col < maxColumn; col += 1) {\n                if (!isForbidden[col]) {\n                    break;\n                }\n            }\n            if (col < maxColumn) {\n                events[i].position = col;\n            }\n            else {\n                events[i].position = maxColumn++;\n            }\n        }\n        if (this.dir === 'rtl') {\n            for (var i = 0; i < len; i += 1) {\n                events[i].position = maxColumn - 1 - events[i].position;\n            }\n        }\n    };\n    WeekViewComponent.prototype.updateCurrentView = function (currentViewStartDate, view) {\n        var currentCalendarDate = this.calendarService.currentDate, today = new Date(), oneDay = 86400000, selectedDayDifference = Math.round((Date.UTC(currentCalendarDate.getFullYear(), currentCalendarDate.getMonth(), currentCalendarDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay), currentDayDifference = Math.floor((Date.UTC(today.getFullYear(), today.getMonth(), today.getTime()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n        for (var r = 0; r < 7; r += 1) {\n            view.dates[r].selected = false;\n        }\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7 && this.autoSelect) {\n            view.dates[selectedDayDifference].selected = true;\n        }\n        if (currentDayDifference >= 0 && currentDayDifference < 7) {\n            view.dates[currentDayDifference].current = true;\n        }\n    };\n    WeekViewComponent.prototype.daySelected = function (viewDate) {\n        var selectedDate = viewDate.date, dates = this.views[this.currentViewIndex].dates, currentViewStartDate = this.range.startTime, oneDay = 86400000, selectedDayDifference = Math.round((Date.UTC(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate()) - Date.UTC(currentViewStartDate.getFullYear(), currentViewStartDate.getMonth(), currentViewStartDate.getDate())) / oneDay);\n        this.calendarService.setCurrentDate(selectedDate);\n        for (var r = 0; r < 7; r += 1) {\n            dates[r].selected = false;\n        }\n        if (selectedDayDifference >= 0 && selectedDayDifference < 7) {\n            dates[selectedDayDifference].selected = true;\n        }\n        var disabled = false;\n        if (this.markDisabled) {\n            disabled = this.markDisabled(selectedDate);\n        }\n        this.onTimeSelected.emit({ selectedTime: selectedDate, events: viewDate.events.map(function (e) { return e.event; }), disabled: disabled });\n    };\n    WeekViewComponent.prototype.setScrollPosition = function (scrollPosition) {\n        this.initScrollPosition = scrollPosition;\n    };\n    var WeekViewComponent_1;\n    tslib_1.__decorate([\n        ViewChild('weekSlider'),\n        tslib_1.__metadata(\"design:type\", IonSlides)\n    ], WeekViewComponent.prototype, \"slider\", void 0);\n    tslib_1.__decorate([\n        HostBinding('class.weekview'),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"class\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewHeaderTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewAllDayEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewNormalEventTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewInactiveAllDayEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", TemplateRef)\n    ], WeekViewComponent.prototype, \"weekviewInactiveNormalEventSectionTemplate\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], WeekViewComponent.prototype, \"formatWeekTitle\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], WeekViewComponent.prototype, \"formatWeekViewDayHeader\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], WeekViewComponent.prototype, \"formatHourColumn\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], WeekViewComponent.prototype, \"startingDayWeek\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], WeekViewComponent.prototype, \"allDayLabel\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], WeekViewComponent.prototype, \"hourParts\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Array)\n    ], WeekViewComponent.prototype, \"eventSource\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"autoSelect\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Function)\n    ], WeekViewComponent.prototype, \"markDisabled\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", String)\n    ], WeekViewComponent.prototype, \"locale\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"dateFormatter\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"dir\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"scrollToHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], WeekViewComponent.prototype, \"preserveScrollPosition\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], WeekViewComponent.prototype, \"lockSwipeToPrev\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Boolean)\n    ], WeekViewComponent.prototype, \"lockSwipes\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], WeekViewComponent.prototype, \"startHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], WeekViewComponent.prototype, \"endHour\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"sliderOptions\", void 0);\n    tslib_1.__decorate([\n        Input(),\n        tslib_1.__metadata(\"design:type\", Number)\n    ], WeekViewComponent.prototype, \"hourSegments\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"onRangeChanged\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"onEventSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"onTimeSelected\", void 0);\n    tslib_1.__decorate([\n        Output(),\n        tslib_1.__metadata(\"design:type\", Object)\n    ], WeekViewComponent.prototype, \"onTitleChanged\", void 0);\n    WeekViewComponent = WeekViewComponent_1 = tslib_1.__decorate([\n        Component({\n            selector: 'weekview',\n            template: \"\\n        <ion-slides #weekSlider [options]=\\\"sliderOptions\\\" [dir]=\\\"dir\\\" (ionSlideDidChange)=\\\"onSlideChanged()\\\"\\n                    class=\\\"slides-container\\\">\\n            <ion-slide class=\\\"slide-container\\\">\\n                <table class=\\\"table table-bordered table-fixed weekview-header\\\">\\n                    <thead>\\n                    <tr>\\n                        <th class=\\\"calendar-hour-column\\\"></th>\\n                        <th class=\\\"weekview-header text-center\\\" *ngFor=\\\"let date of views[0].dates\\\"\\n                            [ngClass]=\\\"getHighlightClass(date)\\\"\\n                            (click)=\\\"daySelected(date)\\\">\\n                            <ng-template [ngTemplateOutlet]=\\\"weekviewHeaderTemplate\\\"\\n                                         [ngTemplateOutletContext]=\\\"{viewDate:date}\\\">\\n                            </ng-template>\\n                        </th>\\n                    </tr>\\n                    </thead>\\n                </table>\\n                <div *ngIf=\\\"0===currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[0].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\"\\n                                          [emitEvent]=\\\"preserveScrollPosition\\\" (onScroll)=\\\"setScrollPosition($event)\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[0].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\" tappable\\n                                    (click)=\\\"select(tm.time, tm.events)\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"weekviewNormalEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\\\">\\n                                    </ng-template>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n                <div *ngIf=\\\"0!==currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[0].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[0].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\">\\n                                    <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveNormalEventSectionTemplate\\\"\\n                                                 [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                    </ng-template>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n            </ion-slide>\\n            <ion-slide class=\\\"slide-container\\\">\\n                <table class=\\\"table table-bordered table-fixed weekview-header\\\">\\n                    <thead>\\n                    <tr>\\n                        <th class=\\\"calendar-hour-column\\\"></th>\\n                        <th class=\\\"weekview-header text-center\\\" *ngFor=\\\"let date of views[1].dates\\\"\\n                            [ngClass]=\\\"getHighlightClass(date)\\\"\\n                            (click)=\\\"daySelected(date)\\\">\\n                            <ng-template [ngTemplateOutlet]=\\\"weekviewHeaderTemplate\\\"\\n                                         [ngTemplateOutletContext]=\\\"{viewDate:date}\\\">\\n                            </ng-template>\\n                        </th>\\n                    </tr>\\n                    </thead>\\n                </table>\\n                <div *ngIf=\\\"1===currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[1].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\"\\n                                          [emitEvent]=\\\"preserveScrollPosition\\\" (onScroll)=\\\"setScrollPosition($event)\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[1].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\" tappable\\n                                    (click)=\\\"select(tm.time, tm.events)\\\">\\n                                    <div [ngClass]=\\\"{'calendar-event-wrap': tm.events}\\\" *ngIf=\\\"tm.events\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewNormalEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\\\">\\n                                        </ng-template>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n                <div *ngIf=\\\"1!==currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[1].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[1].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\">\\n                                    <div [ngClass]=\\\"{'calendar-event-wrap': tm.events}\\\" *ngIf=\\\"tm.events\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveNormalEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                        </ng-template>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n            </ion-slide>\\n            <ion-slide class=\\\"slide-container\\\">\\n                <table class=\\\"table table-bordered table-fixed weekview-header\\\">\\n                    <thead>\\n                    <tr>\\n                        <th class=\\\"calendar-hour-column\\\"></th>\\n                        <th class=\\\"weekview-header text-center\\\" *ngFor=\\\"let date of views[2].dates\\\"\\n                            [ngClass]=\\\"getHighlightClass(date)\\\"\\n                            (click)=\\\"daySelected(date)\\\">\\n                            <ng-template [ngTemplateOutlet]=\\\"weekviewHeaderTemplate\\\"\\n                                         [ngTemplateOutletContext]=\\\"{viewDate:date}\\\">\\n                            </ng-template>\\n                        </th>\\n                    </tr>\\n                    </thead>\\n                </table>\\n                <div *ngIf=\\\"2===currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[2].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day, eventTemplate:weekviewAllDayEventTemplate}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\"\\n                                          [emitEvent]=\\\"preserveScrollPosition\\\" (onScroll)=\\\"setScrollPosition($event)\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[2].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\" tappable\\n                                    (click)=\\\"select(tm.time, tm.events)\\\">\\n                                    <div [ngClass]=\\\"{'calendar-event-wrap': tm.events}\\\" *ngIf=\\\"tm.events\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewNormalEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts, eventTemplate:weekviewNormalEventTemplate}\\\">\\n                                        </ng-template>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n                <div *ngIf=\\\"2!==currentViewIndex\\\">\\n                    <div class=\\\"weekview-allday-table\\\">\\n                        <div class=\\\"weekview-allday-label\\\">{{allDayLabel}}</div>\\n                        <div class=\\\"weekview-allday-content-wrapper scroll-content\\\">\\n                            <table class=\\\"table table-fixed weekview-allday-content-table\\\">\\n                                <tbody>\\n                                <tr>\\n                                    <td *ngFor=\\\"let day of views[2].dates\\\" class=\\\"calendar-cell\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveAllDayEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{day:day}\\\">\\n                                        </ng-template>\\n                                    </td>\\n                                </tr>\\n                                </tbody>\\n                            </table>\\n                        </div>\\n                    </div>\\n                    <init-position-scroll class=\\\"weekview-normal-event-container\\\" [initPosition]=\\\"initScrollPosition\\\">\\n                        <table class=\\\"table table-bordered table-fixed weekview-normal-event-table\\\">\\n                            <tbody>\\n                            <tr *ngFor=\\\"let row of views[2].rows; let i = index\\\">\\n                                <td class=\\\"calendar-hour-column text-center\\\">\\n                                    {{hourColumnLabels[i]}}\\n                                </td>\\n                                <td *ngFor=\\\"let tm of row\\\" class=\\\"calendar-cell\\\">\\n                                    <div [ngClass]=\\\"{'calendar-event-wrap': tm.events}\\\" *ngIf=\\\"tm.events\\\">\\n                                        <ng-template [ngTemplateOutlet]=\\\"weekviewInactiveNormalEventSectionTemplate\\\"\\n                                                     [ngTemplateOutletContext]=\\\"{tm:tm, hourParts: hourParts}\\\">\\n                                        </ng-template>\\n                                    </div>\\n                                </td>\\n                            </tr>\\n                            </tbody>\\n                        </table>\\n                    </init-position-scroll>\\n                </div>\\n            </ion-slide>\\n        </ion-slides>\\n    \",\n            styles: [\"\\n        .table-fixed {\\n            table-layout: fixed;\\n        }\\n\\n        .table {\\n            width: 100%;\\n            max-width: 100%;\\n            background-color: transparent;\\n        }\\n\\n        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td,\\n        .table > tbody > tr > td, .table > tfoot > tr > td {\\n            padding: 8px;\\n            line-height: 20px;\\n            vertical-align: top;\\n        }\\n\\n        .table > thead > tr > th {\\n            vertical-align: bottom;\\n            border-bottom: 2px solid #ddd;\\n        }\\n\\n        .table > thead:first-child > tr:first-child > th, .table > thead:first-child > tr:first-child > td {\\n            border-top: 0\\n        }\\n\\n        .table > tbody + tbody {\\n            border-top: 2px solid #ddd;\\n        }\\n\\n        .table-bordered {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > tbody > tr > th, .table-bordered > tfoot > tr > th,\\n        .table-bordered > thead > tr > td, .table-bordered > tbody > tr > td, .table-bordered > tfoot > tr > td {\\n            border: 1px solid #ddd;\\n        }\\n\\n        .table-bordered > thead > tr > th, .table-bordered > thead > tr > td {\\n            border-bottom-width: 2px;\\n        }\\n\\n        .table-striped > tbody > tr:nth-child(odd) > td, .table-striped > tbody > tr:nth-child(odd) > th {\\n            background-color: #f9f9f9\\n        }\\n\\n        .calendar-hour-column {\\n            width: 50px;\\n            white-space: nowrap;\\n        }\\n\\n        .calendar-event-wrap {\\n            position: relative;\\n            width: 100%;\\n            height: 100%;\\n        }\\n\\n        .calendar-event {\\n            position: absolute;\\n            padding: 2px;\\n            cursor: pointer;\\n            z-index: 10000;\\n        }\\n\\n        .calendar-cell {\\n            padding: 0 !important;\\n            height: 37px;\\n        }\\n\\n        .slides-container {\\n            height: 100%;\\n        }\\n\\n        .slide-container {\\n            display: block;\\n        }\\n\\n        .weekview-allday-label {\\n            float: left;\\n            height: 100%;\\n            line-height: 50px;\\n            text-align: center;\\n            width: 50px;\\n            border-left: 1px solid #ddd;\\n        }\\n\\n        [dir=\\\"rtl\\\"] .weekview-allday-label {\\n            float: right;\\n            border-right: 1px solid #ddd;\\n        }\\n\\n        .weekview-allday-content-wrapper {\\n            margin-left: 50px;\\n            overflow: hidden;\\n            height: 51px;\\n        }\\n\\n        [dir=\\\"rtl\\\"] .weekview-allday-content-wrapper {\\n            margin-left: 0;\\n            margin-right: 50px;\\n        }\\n\\n        .weekview-allday-content-table {\\n            min-height: 50px;\\n        }\\n\\n        .weekview-allday-content-table td {\\n            border-left: 1px solid #ddd;\\n            border-right: 1px solid #ddd;\\n        }\\n\\n        .weekview-header th {\\n            overflow: hidden;\\n            white-space: nowrap;\\n            font-size: 14px;\\n        }\\n\\n        .weekview-allday-table {\\n            height: 50px;\\n            position: relative;\\n            border-bottom: 1px solid #ddd;\\n            font-size: 14px;\\n        }\\n\\n        .weekview-normal-event-container {\\n            margin-top: 87px;\\n            overflow: hidden;\\n            left: 0;\\n            right: 0;\\n            top: 0;\\n            bottom: 0;\\n            position: absolute;\\n            font-size: 14px;\\n        }\\n\\n        .scroll-content {\\n            overflow-y: auto;\\n            overflow-x: hidden;\\n        }\\n\\n        ::-webkit-scrollbar,\\n        *::-webkit-scrollbar {\\n            display: none;\\n        }\\n\\n        .table > tbody > tr > td.calendar-hour-column {\\n            padding-left: 0;\\n            padding-right: 0;\\n            vertical-align: middle;\\n        }\\n\\n        @media (max-width: 750px) {\\n            .weekview-allday-label, .calendar-hour-column {\\n                width: 31px;\\n                font-size: 12px;\\n            }\\n\\n            .weekview-allday-label {\\n                padding-top: 4px;\\n            }\\n\\n            .table > tbody > tr > td.calendar-hour-column {\\n                padding-left: 0;\\n                padding-right: 0;\\n                vertical-align: middle;\\n                line-height: 12px;\\n            }\\n\\n            .table > thead > tr > th.weekview-header {\\n                padding-left: 0;\\n                padding-right: 0;\\n                font-size: 12px;\\n            }\\n\\n            .weekview-allday-label {\\n                line-height: 20px;\\n            }\\n\\n            .weekview-allday-content-wrapper {\\n                margin-left: 31px;\\n            }\\n\\n            [dir=\\\"rtl\\\"] .weekview-allday-content-wrapper {\\n                margin-left: 0;\\n                margin-right: 31px;\\n            }\\n        }\\n    \"],\n            encapsulation: ViewEncapsulation.None\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [CalendarService, ElementRef])\n    ], WeekViewComponent);\n    return WeekViewComponent;\n}());\nexport { WeekViewComponent };\n","export default \"<p>\\r\\n  calendar works!\\r\\n</p>\\r\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhbGVuZGFyL2NhbGVuZGFyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-calendar',\r\n  templateUrl: './calendar.component.html',\r\n  styleUrls: ['./calendar.component.scss'],\r\n})\r\nexport class CalendarComponent implements OnInit {\r\n  slideNext() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  slidePrev() {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  loadEvents() {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}