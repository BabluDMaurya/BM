{"version":3,"sources":["src/app/auth/verify/verify.page.html","src/app/auth/verify/verify-routing.module.ts","src/app/auth/verify/verify.module.ts","src/app/auth/verify/verify.page.scss","src/app/auth/verify/verify.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-content class=\\\"sec-login\\\" ion-padding>\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"ion-padding ion-text-center\\\">\\r\\n      <div class=\\\"login-logo ion-text-center\\\">\\r\\n        <ion-icon ios=\\\"ios-arrow-back\\\" md=\\\"md-arrow-back\\\" [routerLink]=\\\"['/signup']\\\" class=\\\"back-icon\\\"></ion-icon>\\r\\n        <img src=\\\"../../../assets/images/logo.png\\\">  \\r\\n      </div>      \\r\\n      <ion-label class=\\\"text-white\\\">Please check your given email id for OTP</ion-label>      \\r\\n      <form class=\\\"login-form mt-20\\\" [formGroup]=\\\"otpForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-input placeholder=\\\"Enter Otp\\\" type=\\\"number\\\" formControlName=\\\"otp\\\" ></ion-input>\\r\\n        </ion-item>\\r\\n        <ng-container *ngFor=\\\"let validation of validation_messages.otp\\\">\\r\\n          <span class=\\\"error-message\\\"\\r\\n            *ngIf=\\\"(submittedÂ || otpForm.get('otp').touched) && otpForm.get('otp').hasError(validation.type)\\\">\\r\\n            {{ validation.message }}\\r\\n          </span>\\r\\n        </ng-container>\\r\\n        <!-- <ion-item class=\\\"ion-no-padding\\\">\\r\\n          <ion-input placeholder=\\\"\\\" type=\\\"hidden\\\" formControlName=\\\"uemail\\\" ></ion-input>  \\r\\n        </ion-item>            -->\\r\\n        <div class=\\\"ion-text-end ion-margin-bottom text-green\\\">\\r\\n          <p (click)=\\\"resend()\\\" class=\\\"text-green\\\">Resend OTP</p>\\r\\n        </div>\\r\\n        <ion-button expand=\\\"block\\\" class=\\\"green ion-text-uppercase mt-20\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\r\\n      </form>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { VerifyPage } from './verify.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VerifyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VerifyPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { VerifyPageRoutingModule } from './verify-routing.module';\r\n\r\nimport { VerifyPage } from './verify.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    VerifyPageRoutingModule\r\n  ],\r\n  declarations: [VerifyPage]\r\n})\r\nexport class VerifyPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvdmVyaWZ5L3ZlcmlmeS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router, ActivatedRoute,ParamMap} from '@angular/router';\r\nimport { FormArray, FormControl, FormGroup, Validators,FormBuilder } from '@angular/forms';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Storage} from '@ionic/storage';\r\nimport { AuthService } from '../../services/auth.service';\r\n//import { ToastController } from '@ionic/angular';\r\nimport  {CommonService} from './../../services/common.service'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-verify',\r\n  templateUrl: './verify.page.html',\r\n  styleUrls: ['./verify.page.scss','./../../app.component.scss'],\r\n})\r\nexport class VerifyPage implements OnInit {\r\n  otpForm: FormGroup;\r\n  uemail:string;\r\n  submitted = false;\r\n // userData:Array;\r\n  constructor(private fb: FormBuilder,\r\n              private http: HttpClient, \r\n              private authService:AuthService, \r\n              private storage:Storage,\r\n              private router:Router,\r\n              public commonService:CommonService,\r\n              public activatedRoute: ActivatedRoute\r\n              ) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.activatedRoute.paramMap.subscribe((params: ParamMap) => {                 \r\n      this.uemail = params.get('userData');\r\n    });\r\n\r\n   this.otpForm = this.fb.group({     \r\n    otp: new FormControl('', Validators.compose([\r\n      Validators.required,\r\n    ])),\r\n    uemail: [''],\r\n    });\r\n  }\r\n\r\n\r\n  validation_messages = {\r\n    'otp': [\r\n      { type: 'required', message: 'OTP required'},      \r\n    ]\r\n   };\r\n\r\n   resend()\r\n   {\r\n     this.commonService.presentLoader();\r\n     this.authService.resendOtp({'uemail':this.uemail}).subscribe(\r\n      (data:any)=>{\r\n        console.log(data);\r\n          if(data.status == true)\r\n          {\r\n            this.commonService.dismissLoader();\r\n            this.commonService.presentToast(\"Check email for new Otp. \");\r\n            \r\n          }else {\r\n            this.commonService.dismissLoader();\r\n            \r\n            this.commonService.presentToast(data.status);\r\n          }\r\n        },\r\n        err => {\r\n          this.commonService.dismissLoader();\r\n          console.log(err);\r\n      });\r\n\r\n   }\r\n\r\n   get f() { return this.otpForm.controls; }\r\n  \r\n   onSubmit() {\r\n      this.submitted = true;\r\n      this.otpForm.get('uemail').setValue(this.uemail );\r\n      if(this.otpForm.invalid)\r\n      {\r\n        return;\r\n      }\r\n      this.commonService.presentLoader();\r\n      this.authService.checkOtp(this.otpForm.value).subscribe(\r\n        (data:any)=>{\r\n          console.log(data);\r\n        if(data.status == false)\r\n        {\r\n          console.log('otp doesnt match');\r\n          \r\n        }else if(data.status == true){\r\n          this.commonService.dismissLoader();\r\n          this.storage.set('userDetails', data.status);\r\n          this.router.navigateByUrl('signin');\r\n        }else{\r\n          this.commonService.dismissLoader();\r\n          this.commonService.presentToast(data.message);\r\n          console.log(data.message);\r\n      \r\n        }\r\n      },\r\n      err => {\r\n        console.log(err);\r\n    });    \r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"auth-verify-verify-module-es5.js"}